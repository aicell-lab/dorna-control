import numpy as np
import math
from dorna2.cf import CF
from sympy.parsing.mathematica import mathematica
from sympy import var
from dorna2.poly import poly



def sigma_matrix(a2,a3,d1,d4,d5,d6,d7,f13,f23,f33,f14,f24,f34):#polynomials over x3
    den1 = (f14**2 + d7**2*(f13**2 + f23**2) + f24**2 - 2*d7*(f13*f14 + f23*f24))
    den2 = ((-f13)*f14 + d7*(f13**2 + f23**2) - f23*f24)
    return [
[poly([0]), poly([0]), poly([0]), poly([(a2**2*(f14*f23 - f13*f24) - 2*a2*(d4 + d6)*den2 + (f14*f23 - f13*f24)*(-a3**2 + d1**2 - d4**2 - 2*a3*d5 - d5**2 - 2*d4*d6 - d6**2 + d7**2*f13**2 - 2*d7*f13*f14 + f14**2 + d7**2*f23**2 - 2*d7*f23*f24 + f24**2 + 2*d1*d7*f33 + d7**2*f33**2 - 
2*d1*f34 - 2*d7*f33*f34 + f34**2))/(2*a2*den2), 0, (a2**2*(f14*f23 - f13*f24) - 2*a2*(d4 + d6)*den2 + 
(f14*f23 - f13*f24)*(-a3**2 + d1**2 - d4**2 + 2*a3*d5 - d5**2 - 2*d4*d6 - d6**2 + d7**2*f13**2 - 2*d7*f13*f14 + f14**2 + d7**2*f23**2 - 2*d7*f23*f24 + f24**2 + 2*d1*d7*f33 + d7**2*f33**2 - 2*d1*f34 - 2*d7*f33*f34 + f34**2))/(2*a2*den2)]), poly([0]), 
poly([(a2**2*(f14*f23 - f13*f24) - 2*a2*(d4 + d6)*den2 + (f14*f23 - f13*f24)*(-a3**2 + d1**2 - d4**2 - 2*a3*d5 - d5**2 - 2*d4*d6 - d6**2 + d7**2*f13**2 - 2*d7*f13*f14 + f14**2 + d7**2*f23**2 - 2*d7*f23*f24 + f24**2 + 2*d1*d7*f33 + d7**2*f33**2 - 2*d1*f34 - 
2*d7*f33*f34 + f34**2))/(2*a2*den2), 0, (a2**2*(f14*f23 - f13*f24) - 2*a2*(d4 + d6)*den2 + 
(f14*f23 - f13*f24)*(-a3**2 + d1**2 - d4**2 + 2*a3*d5 - d5**2 - 2*d4*d6 - d6**2 + d7**2*f13**2 - 2*d7*f13*f14 + f14**2 + d7**2*f23**2 - 2*d7*f23*f24 + f24**2 + 2*d1*d7*f33 + d7**2*f33**2 - 2*d1*f34 - 2*d7*f33*f34 + f34**2))/(2*a2*den2)]), 
poly([0, (4*a3*d6*((-f14)*f23 + f13*f24))/(a2*den2)]), poly([(4*den1)/den2, 0, 
(4*den1)/den2]), poly([0, (4*a3*d6*((-f14)*f23 + f13*f24))/(a2*den2)]), 
poly([(a2**2*(f14*f23 - f13*f24) - 2*a2*(d4 - d6)*den2 + (f14*f23 - f13*f24)*(-a3**2 + d1**2 - d4**2 - 2*a3*d5 - d5**2 + 2*d4*d6 - d6**2 + d7**2*f13**2 - 2*d7*f13*f14 + f14**2 + d7**2*f23**2 - 2*d7*f23*f24 + f24**2 + 2*d1*d7*f33 + d7**2*f33**2 - 2*d1*f34 - 
2*d7*f33*f34 + f34**2))/(2*a2*den2), 0, (a2**2*(f14*f23 - f13*f24) - 2*a2*(d4 - d6)*den2 + 
(f14*f23 - f13*f24)*(-a3**2 + d1**2 - d4**2 + 2*a3*d5 - d5**2 + 2*d4*d6 - d6**2 + d7**2*f13**2 - 2*d7*f13*f14 + f14**2 + d7**2*f23**2 - 2*d7*f23*f24 + f24**2 + 2*d1*d7*f33 + d7**2*f33**2 - 2*d1*f34 - 2*d7*f33*f34 + f34**2))/(2*a2*den2)]), poly([0]), 
poly([(a2**2*(f14*f23 - f13*f24) - 2*a2*(d4 - d6)*den2 + (f14*f23 - f13*f24)*(-a3**2 + d1**2 - d4**2 - 2*a3*d5 - d5**2 + 2*d4*d6 - d6**2 + d7**2*f13**2 - 2*d7*f13*f14 + f14**2 + d7**2*f23**2 - 2*d7*f23*f24 + f24**2 + 2*d1*d7*f33 + d7**2*f33**2 - 2*d1*f34 - 
2*d7*f33*f34 + f34**2))/(2*a2*den2), 0, (a2**2*(f14*f23 - f13*f24) - 2*a2*(d4 - d6)*den2 + 
(f14*f23 - f13*f24)*(-a3**2 + d1**2 - d4**2 + 2*a3*d5 - d5**2 + 2*d4*d6 - d6**2 + d7**2*f13**2 - 2*d7*f13*f14 + f14**2 + d7**2*f23**2 - 2*d7*f23*f24 + f24**2 + 2*d1*d7*f33 + d7**2*f33**2 - 2*d1*f34 - 2*d7*f33*f34 + f34**2))/(2*a2*den2)])]
,[poly([0]), poly([0]), poly([0]), poly([-((1/(2*den2))*((-d1**2)*f13**2 + d4**2*f13**2 + d5**2*f13**2 + 2*d4*d6*f13**2 + d6**2*f13**2 - 2*d5*d7*f13**2 + d7**2*f13**4 + 2*d5*f13*f14 - 2*d7*f13**3*f14 + f13**2*f14**2 - d1**2*f23**2 + d4**2*f23**2 + d5**2*f23**2 + 2*d4*d6*f23**2 + d6**2*f23**2 - 
2*d5*d7*f23**2 + 2*d7**2*f13**2*f23**2 - 2*d7*f13*f14*f23**2 - f14**2*f23**2 + d7**2*f23**4 - a2**2*(f13**2 + f23**2) + a3**2*(f13**2 + f23**2) + 2*d5*f23*f24 - 2*d7*f13**2*f23*f24 + 4*f13*f14*f23*f24 - 2*d7*f23**3*f24 - f13**2*f24**2 + f23**2*f24**2 + 
2*a3*(f13*f14 + d5*(f13**2 + f23**2) - d7*(f13**2 + f23**2) + f23*f24) - 2*d1*f13*f14*f33 - 2*d1*f23*f24*f33 + d7**2*f13**2*f33**2 - 2*d7*f13*f14*f33**2 + d7**2*f23**2*f33**2 - 2*d7*f23*f24*f33**2 + 2*d1*f13**2*f34 + 2*d1*f23**2*f34 + 2*f13*f14*f33*f34 + 2*f23*f24*f33*f34 - f13**2*f34**2 - 
f23**2*f34**2)), 0, -((1/(2*den2))*((-d1**2)*f13**2 + d4**2*f13**2 + d5**2*f13**2 + 2*d4*d6*f13**2 + d6**2*f13**2 - 2*d5*d7*f13**2 + d7**2*f13**4 + 2*d5*f13*f14 - 2*d7*f13**3*f14 + f13**2*f14**2 - d1**2*f23**2 + d4**2*f23**2 + d5**2*f23**2 + 2*d4*d6*f23**2 + 
d6**2*f23**2 - 2*d5*d7*f23**2 + 2*d7**2*f13**2*f23**2 - 2*d7*f13*f14*f23**2 - f14**2*f23**2 + d7**2*f23**4 - a2**2*(f13**2 + f23**2) + a3**2*(f13**2 + f23**2) + 2*d5*f23*f24 - 2*d7*f13**2*f23*f24 + 4*f13*f14*f23*f24 - 2*d7*f23**3*f24 - f13**2*f24**2 + f23**2*f24**2 - 
2*a3*(f13*f14 + d5*(f13**2 + f23**2) - d7*(f13**2 + f23**2) + f23*f24) - 2*d1*f13*f14*f33 - 2*d1*f23*f24*f33 + d7**2*f13**2*f33**2 - 2*d7*f13*f14*f33**2 + d7**2*f23**2*f33**2 - 2*d7*f23*f24*f33**2 + 2*d1*f13**2*f34 + 2*d1*f23**2*f34 + 2*f13*f14*f33*f34 + 2*f23*f24*f33*f34 - f13**2*f34**2 - 
f23**2*f34**2))]), poly([0, -4*a3]), poly([-((1/(2*den2))*((-d1**2)*f13**2 + d4**2*f13**2 + d5**2*f13**2 + 2*d4*d6*f13**2 + d6**2*f13**2 + 2*d5*d7*f13**2 + d7**2*f13**4 - 2*d5*f13*f14 - 2*d7*f13**3*f14 + f13**2*f14**2 - d1**2*f23**2 + d4**2*f23**2 + d5**2*f23**2 + 
2*d4*d6*f23**2 + d6**2*f23**2 + 2*d5*d7*f23**2 + 2*d7**2*f13**2*f23**2 - 2*d7*f13*f14*f23**2 - f14**2*f23**2 + d7**2*f23**4 - a2**2*(f13**2 + f23**2) + a3**2*(f13**2 + f23**2) - 2*d5*f23*f24 - 2*d7*f13**2*f23*f24 + 4*f13*f14*f23*f24 - 2*d7*f23**3*f24 - f13**2*f24**2 + f23**2*f24**2 + 
2*a3*((-f13)*f14 + d5*(f13**2 + f23**2) + d7*(f13**2 + f23**2) - f23*f24) - 2*d1*f13*f14*f33 - 2*d1*f23*f24*f33 + d7**2*f13**2*f33**2 - 2*d7*f13*f14*f33**2 + d7**2*f23**2*f33**2 - 2*d7*f23*f24*f33**2 + 2*d1*f13**2*f34 + 2*d1*f23**2*f34 + 2*f13*f14*f33*f34 + 2*f23*f24*f33*f34 - f13**2*f34**2 - 
f23**2*f34**2)), 0, -((1/(2*den2))*((-d1**2)*f13**2 + d4**2*f13**2 + d5**2*f13**2 + 2*d4*d6*f13**2 + d6**2*f13**2 + 2*d5*d7*f13**2 + d7**2*f13**4 - 2*d5*f13*f14 - 2*d7*f13**3*f14 + f13**2*f14**2 - d1**2*f23**2 + d4**2*f23**2 + d5**2*f23**2 + 2*d4*d6*f23**2 + 
d6**2*f23**2 + 2*d5*d7*f23**2 + 2*d7**2*f13**2*f23**2 - 2*d7*f13*f14*f23**2 - f14**2*f23**2 + d7**2*f23**4 - a2**2*(f13**2 + f23**2) + a3**2*(f13**2 + f23**2) - 2*d5*f23*f24 - 2*d7*f13**2*f23*f24 + 4*f13*f14*f23*f24 - 2*d7*f23**3*f24 - f13**2*f24**2 + f23**2*f24**2 - 
2*a3*((-f13)*f14 + d5*(f13**2 + f23**2) + d7*(f13**2 + f23**2) - f23*f24) - 2*d1*f13*f14*f33 - 2*d1*f23*f24*f33 + d7**2*f13**2*f33**2 - 2*d7*f13*f14*f33**2 + d7**2*f23**2*f33**2 - 2*d7*f23*f24*f33**2 + 2*d1*f13**2*f34 + 2*d1*f23**2*f34 + 2*f13*f14*f33*f34 + 2*f23*f24*f33*f34 - f13**2*f34**2 - 
f23**2*f34**2))]), poly([0, -((4*a3*d6*(f13**2 + f23**2))/den2)]), poly([(4*(a2*(f14*f23 - f13*f24) + d4*den2))/den2, 0, 
(4*(a2*(f14*f23 - f13*f24) + d4*den2))/den2]), poly([0, -((4*a3*d6*(f13**2 + f23**2))/den2)]), 
poly([-((1/(2*den2))*((-d1**2)*f13**2 + d4**2*f13**2 + d5**2*f13**2 - 2*d4*d6*f13**2 + d6**2*f13**2 - 2*d5*d7*f13**2 + d7**2*f13**4 + 2*d5*f13*f14 - 2*d7*f13**3*f14 + f13**2*f14**2 - d1**2*f23**2 + d4**2*f23**2 + d5**2*f23**2 - 2*d4*d6*f23**2 + d6**2*f23**2 - 
2*d5*d7*f23**2 + 2*d7**2*f13**2*f23**2 - 2*d7*f13*f14*f23**2 - f14**2*f23**2 + d7**2*f23**4 - a2**2*(f13**2 + f23**2) + a3**2*(f13**2 + f23**2) + 2*d5*f23*f24 - 2*d7*f13**2*f23*f24 + 4*f13*f14*f23*f24 - 2*d7*f23**3*f24 - f13**2*f24**2 + f23**2*f24**2 + 
2*a3*(f13*f14 + d5*(f13**2 + f23**2) - d7*(f13**2 + f23**2) + f23*f24) - 2*d1*f13*f14*f33 - 2*d1*f23*f24*f33 + d7**2*f13**2*f33**2 - 2*d7*f13*f14*f33**2 + d7**2*f23**2*f33**2 - 2*d7*f23*f24*f33**2 + 2*d1*f13**2*f34 + 2*d1*f23**2*f34 + 2*f13*f14*f33*f34 + 2*f23*f24*f33*f34 - f13**2*f34**2 - 
f23**2*f34**2)), 0, -((1/(2*den2))*((-d1**2)*f13**2 + d4**2*f13**2 + d5**2*f13**2 - 2*d4*d6*f13**2 + d6**2*f13**2 - 2*d5*d7*f13**2 + d7**2*f13**4 + 2*d5*f13*f14 - 2*d7*f13**3*f14 + f13**2*f14**2 - d1**2*f23**2 + d4**2*f23**2 + d5**2*f23**2 - 2*d4*d6*f23**2 + 
d6**2*f23**2 - 2*d5*d7*f23**2 + 2*d7**2*f13**2*f23**2 - 2*d7*f13*f14*f23**2 - f14**2*f23**2 + d7**2*f23**4 - a2**2*(f13**2 + f23**2) + a3**2*(f13**2 + f23**2) + 2*d5*f23*f24 - 2*d7*f13**2*f23*f24 + 4*f13*f14*f23*f24 - 2*d7*f23**3*f24 - f13**2*f24**2 + f23**2*f24**2 - 
2*a3*(f13*f14 + d5*(f13**2 + f23**2) - d7*(f13**2 + f23**2) + f23*f24) - 2*d1*f13*f14*f33 - 2*d1*f23*f24*f33 + d7**2*f13**2*f33**2 - 2*d7*f13*f14*f33**2 + d7**2*f23**2*f33**2 - 2*d7*f23*f24*f33**2 + 2*d1*f13**2*f34 + 2*d1*f23**2*f34 + 2*f13*f14*f33*f34 + 2*f23*f24*f33*f34 - f13**2*f34**2 - 
f23**2*f34**2))]), poly([0, 4*a3]), poly([-((1/(2*den2))*((-d1**2)*f13**2 + d4**2*f13**2 + d5**2*f13**2 - 2*d4*d6*f13**2 + d6**2*f13**2 + 2*d5*d7*f13**2 + d7**2*f13**4 - 2*d5*f13*f14 - 2*d7*f13**3*f14 + f13**2*f14**2 - d1**2*f23**2 + d4**2*f23**2 + d5**2*f23**2 - 
2*d4*d6*f23**2 + d6**2*f23**2 + 2*d5*d7*f23**2 + 2*d7**2*f13**2*f23**2 - 2*d7*f13*f14*f23**2 - f14**2*f23**2 + d7**2*f23**4 - a2**2*(f13**2 + f23**2) + a3**2*(f13**2 + f23**2) - 2*d5*f23*f24 - 2*d7*f13**2*f23*f24 + 4*f13*f14*f23*f24 - 2*d7*f23**3*f24 - f13**2*f24**2 + f23**2*f24**2 + 
2*a3*((-f13)*f14 + d5*(f13**2 + f23**2) + d7*(f13**2 + f23**2) - f23*f24) - 2*d1*f13*f14*f33 - 2*d1*f23*f24*f33 + d7**2*f13**2*f33**2 - 2*d7*f13*f14*f33**2 + d7**2*f23**2*f33**2 - 2*d7*f23*f24*f33**2 + 2*d1*f13**2*f34 + 2*d1*f23**2*f34 + 2*f13*f14*f33*f34 + 2*f23*f24*f33*f34 - f13**2*f34**2 - 
f23**2*f34**2)), 0, -((1/(2*den2))*((-d1**2)*f13**2 + d4**2*f13**2 + d5**2*f13**2 - 2*d4*d6*f13**2 + d6**2*f13**2 + 2*d5*d7*f13**2 + d7**2*f13**4 - 2*d5*f13*f14 - 2*d7*f13**3*f14 + f13**2*f14**2 - d1**2*f23**2 + d4**2*f23**2 + d5**2*f23**2 - 2*d4*d6*f23**2 + 
d6**2*f23**2 + 2*d5*d7*f23**2 + 2*d7**2*f13**2*f23**2 - 2*d7*f13*f14*f23**2 - f14**2*f23**2 + d7**2*f23**4 - a2**2*(f13**2 + f23**2) + a3**2*(f13**2 + f23**2) - 2*d5*f23*f24 - 2*d7*f13**2*f23*f24 + 4*f13*f14*f23*f24 - 2*d7*f23**3*f24 - f13**2*f24**2 + f23**2*f24**2 - 
2*a3*((-f13)*f14 + d5*(f13**2 + f23**2) + d7*(f13**2 + f23**2) - f23*f24) - 2*d1*f13*f14*f33 - 2*d1*f23*f24*f33 + d7**2*f13**2*f33**2 - 2*d7*f13*f14*f33**2 + d7**2*f23**2*f33**2 - 2*d7*f23*f24*f33**2 + 2*d1*f13**2*f34 + 2*d1*f23**2*f34 + 2*f13*f14*f33*f34 + 2*f23*f24*f33*f34 - f13**2*f34**2 - 
f23**2*f34**2))])]
,[poly([0]), poly([0]), poly([0]), poly([(1/(2*a2*den2))*(a2**2*(d1*(f13**2 + f23**2) - f13*f14*f33 + 2*d7*(f13**2 + f23**2)*f33 - f23*f24*f33 - f13**2*f34 - f23**2*f34) + 
(-a3**2 + d1**2 - d4**2 - 2*a3*d5 - d5**2 - 2*d4*d6 - d6**2 + d7**2*f13**2 - 2*d7*f13*f14 + f14**2 + d7**2*f23**2 - 2*d7*f23*f24 + f24**2 + 2*d1*d7*f33 + d7**2*f33**2 - 2*d1*f34 - 2*d7*f33*f34 + f34**2)*(d1*(f13**2 + f23**2) + f13*f14*f33 - f13**2*f34 + f23*(f24*f33 - f23*f34))), -2*a3, 
(1/(2*a2*den2))*(a2**2*(d1*(f13**2 + f23**2) - f13*f14*f33 + 2*d7*(f13**2 + f23**2)*f33 - f23*f24*f33 - f13**2*f34 - f23**2*f34) - a3**2*(d1*(f13**2 + f23**2) + f13*f14*f33 - f13**2*f34 + f23*(f24*f33 - f23*f34)) + 
2*a3*d5*(d1*(f13**2 + f23**2) + f13*f14*f33 - f13**2*f34 + f23*(f24*f33 - f23*f34)) + (d1**2 - d4**2 - d5**2 - 2*d4*d6 - d6**2 + d7**2*f13**2 - 2*d7*f13*f14 + f14**2 + d7**2*f23**2 - 2*d7*f23*f24 + f24**2 + 2*d1*d7*f33 + d7**2*f33**2 - 2*d1*f34 - 2*d7*f33*f34 + f34**2)*
(d1*(f13**2 + f23**2) + f13*f14*f33 - f13**2*f34 + f23*(f24*f33 - f23*f34)))]), poly([-2*(a3 + d5), 0, 2*(a3 - d5)]), 
poly([(1/(2*a2*den2))*(a2**2*(d1*(f13**2 + f23**2) - f13*f14*f33 + 2*d7*(f13**2 + f23**2)*f33 - f23*f24*f33 - f13**2*f34 - f23**2*f34) + 
(-a3**2 + d1**2 - d4**2 - 2*a3*d5 - d5**2 - 2*d4*d6 - d6**2 + d7**2*f13**2 - 2*d7*f13*f14 + f14**2 + d7**2*f23**2 - 2*d7*f23*f24 + f24**2 + 2*d1*d7*f33 + d7**2*f33**2 - 2*d1*f34 - 2*d7*f33*f34 + f34**2)*(d1*(f13**2 + f23**2) + f13*f14*f33 - f13**2*f34 + f23*(f24*f33 - f23*f34))), 2*a3, 
(1/(2*a2*den2))*(a2**2*(d1*(f13**2 + f23**2) - f13*f14*f33 + 2*d7*(f13**2 + f23**2)*f33 - f23*f24*f33 - f13**2*f34 - f23**2*f34) - a3**2*(d1*(f13**2 + f23**2) + f13*f14*f33 - f13**2*f34 + f23*(f24*f33 - f23*f34)) + 
2*a3*d5*(d1*(f13**2 + f23**2) + f13*f14*f33 - f13**2*f34 + f23*(f24*f33 - f23*f34)) + (d1**2 - d4**2 - d5**2 - 2*d4*d6 - d6**2 + d7**2*f13**2 - 2*d7*f13*f14 + f14**2 + d7**2*f23**2 - 2*d7*f23*f24 + f24**2 + 2*d1*d7*f33 + d7**2*f33**2 - 2*d1*f34 - 2*d7*f33*f34 + f34**2)*
(d1*(f13**2 + f23**2) + f13*f14*f33 - f13**2*f34 + f23*(f24*f33 - f23*f34)))]), poly([-2*d6, -((4*a3*d6*(d1*(f13**2 + f23**2) + f13*f14*f33 - f13**2*f34 + f23*(f24*f33 - f23*f34)))/(a2*den2)), -2*d6]), 
poly([-((4*(f14*f23 - f13*f24)*(d1 + d7*f33 - f34))/(f13*f14 - d7*(f13**2 + f23**2) + f23*f24)), 0, -((4*(f14*f23 - f13*f24)*(d1 + d7*f33 - f34))/(f13*f14 - d7*(f13**2 + f23**2) + f23*f24))]), 
poly([2*d6, -((4*a3*d6*(d1*(f13**2 + f23**2) + f13*f14*f33 - f13**2*f34 + f23*(f24*f33 - f23*f34)))/(a2*den2)), 2*d6]), 
poly([(1/(2*a2*den2))*(a2**2*(d1*(f13**2 + f23**2) - f13*f14*f33 + 2*d7*(f13**2 + f23**2)*f33 - f23*f24*f33 - f13**2*f34 - f23**2*f34) + 
(-a3**2 + d1**2 - d4**2 - 2*a3*d5 - d5**2 + 2*d4*d6 - d6**2 + d7**2*f13**2 - 2*d7*f13*f14 + f14**2 + d7**2*f23**2 - 2*d7*f23*f24 + f24**2 + 2*d1*d7*f33 + d7**2*f33**2 - 2*d1*f34 - 2*d7*f33*f34 + f34**2)*(d1*(f13**2 + f23**2) + f13*f14*f33 - f13**2*f34 + f23*(f24*f33 - f23*f34))), -2*a3, 
(1/(2*a2*den2))*(a2**2*(d1*(f13**2 + f23**2) - f13*f14*f33 + 2*d7*(f13**2 + f23**2)*f33 - f23*f24*f33 - f13**2*f34 - f23**2*f34) - a3**2*(d1*(f13**2 + f23**2) + f13*f14*f33 - f13**2*f34 + f23*(f24*f33 - f23*f34)) + 
2*a3*d5*(d1*(f13**2 + f23**2) + f13*f14*f33 - f13**2*f34 + f23*(f24*f33 - f23*f34)) + (d1**2 - d4**2 - d5**2 + 2*d4*d6 - d6**2 + d7**2*f13**2 - 2*d7*f13*f14 + f14**2 + d7**2*f23**2 - 2*d7*f23*f24 + f24**2 + 2*d1*d7*f33 + d7**2*f33**2 - 2*d1*f34 - 2*d7*f33*f34 + f34**2)*
(d1*(f13**2 + f23**2) + f13*f14*f33 - f13**2*f34 + f23*(f24*f33 - f23*f34)))]), poly([2*(a3 + d5), 0, -2*a3 + 2*d5]), 
poly([(1/(2*a2*den2))*(a2**2*(d1*(f13**2 + f23**2) - f13*f14*f33 + 2*d7*(f13**2 + f23**2)*f33 - f23*f24*f33 - f13**2*f34 - f23**2*f34) + 
(-a3**2 + d1**2 - d4**2 - 2*a3*d5 - d5**2 + 2*d4*d6 - d6**2 + d7**2*f13**2 - 2*d7*f13*f14 + f14**2 + d7**2*f23**2 - 2*d7*f23*f24 + f24**2 + 2*d1*d7*f33 + d7**2*f33**2 - 2*d1*f34 - 2*d7*f33*f34 + f34**2)*(d1*(f13**2 + f23**2) + f13*f14*f33 - f13**2*f34 + f23*(f24*f33 - f23*f34))), 2*a3, 
(1/(2*a2*den2))*(a2**2*(d1*(f13**2 + f23**2) - f13*f14*f33 + 2*d7*(f13**2 + f23**2)*f33 - f23*f24*f33 - f13**2*f34 - f23**2*f34) - a3**2*(d1*(f13**2 + f23**2) + f13*f14*f33 - f13**2*f34 + f23*(f24*f33 - f23*f34)) + 
2*a3*d5*(d1*(f13**2 + f23**2) + f13*f14*f33 - f13**2*f34 + f23*(f24*f33 - f23*f34)) + (d1**2 - d4**2 - d5**2 + 2*d4*d6 - d6**2 + d7**2*f13**2 - 2*d7*f13*f14 + f14**2 + d7**2*f23**2 - 2*d7*f23*f24 + f24**2 + 2*d1*d7*f33 + d7**2*f33**2 - 2*d1*f34 - 2*d7*f33*f34 + f34**2)*
(d1*(f13**2 + f23**2) + f13*f14*f33 - f13**2*f34 + f23*(f24*f33 - f23*f34)))])]
,[poly([0]), poly([0]), poly([0]), poly([a2**2 - a3**2 - d1**2 + d4**2 - d5**2 + 2*d4*d6 + d6**2 + 2*d5*d7*f13**2 - d7**2*f13**2 - 2*d5*f13*f14 + 2*d7*f13*f14 - f14**2 + 2*d5*d7*f23**2 - d7**2*f23**2 - 2*d5*f23*f24 + 2*d7*f23*f24 - f24**2 + 2*d5*d7*f33**2 - d7**2*f33**2 - 2*d5*f33*f34 + 2*d7*f33*f34 - f34**2 + 
2*d1*(d5*f33 - d7*f33 + f34) - 2*a3*(d5 + f13*f14 + f23*f24 - d1*f33 - d7*(f13**2 + f23**2 + f33**2) + f33*f34), -4*a2*(d1 - d5*f33 + d7*f33 - f34), -a2**2 + a3**2 + d1**2 - d4**2 + d5**2 - 2*d4*d6 - d6**2 - 2*d5*d7*f13**2 + d7**2*f13**2 + 2*d5*f13*f14 - 2*d7*f13*f14 + f14**2 - 2*d5*d7*f23**2 + 
d7**2*f23**2 + 2*d5*f23*f24 - 2*d7*f23*f24 + f24**2 - 2*d5*d7*f33**2 + d7**2*f33**2 + 2*d5*f33*f34 - 2*d7*f33*f34 + f34**2 - 2*d1*(d5*f33 - d7*f33 + f34) - 2*a3*(d5 + f13*f14 + f23*f24 - d1*f33 - d7*(f13**2 + f23**2 + f33**2) + f33*f34)]), 
poly([-4*a2*(d1 + d7*f33 - f34), 4*(-a2**2 + a3**2 + d1**2 - d4**2 - d5**2 - 2*d4*d6 - d6**2 + d7**2*f13**2 - 2*d7*f13*f14 + f14**2 + d7**2*f23**2 - 2*d7*f23*f24 + f24**2 + 2*d1*d7*f33 + d7**2*f33**2 - 2*d1*f34 - 2*d7*f33*f34 + f34**2), 4*a2*(d1 + d7*f33 - f34)]), 
poly([-a2**2 + a3**2 + d1**2 - d4**2 + d5**2 - 2*d4*d6 - d6**2 + 2*d5*d7*f13**2 + d7**2*f13**2 - 2*d5*f13*f14 - 2*d7*f13*f14 + f14**2 + 2*d5*d7*f23**2 + d7**2*f23**2 - 2*d5*f23*f24 - 2*d7*f23*f24 + f24**2 + 2*d5*d7*f33**2 + d7**2*f33**2 + 2*d1*(d5*f33 + d7*f33 - f34) - 2*d5*f33*f34 - 2*d7*f33*f34 + 
f34**2 + 2*a3*(d5 - f13*f14 - f23*f24 + d1*f33 + d7*(f13**2 + f23**2 + f33**2) - f33*f34), 4*a2*(d1 + d5*f33 + d7*f33 - f34), a2**2 - a3**2 - d1**2 + d4**2 - d5**2 + 2*d4*d6 + d6**2 - 2*d5*d7*f13**2 - d7**2*f13**2 + 2*d5*f13*f14 + 2*d7*f13*f14 - f14**2 - 2*d5*d7*f23**2 - d7**2*f23**2 + 
2*d5*f23*f24 + 2*d7*f23*f24 - f24**2 - 2*d5*d7*f33**2 - d7**2*f33**2 - 2*d1*(d5*f33 + d7*f33 - f34) + 2*d5*f33*f34 + 2*d7*f33*f34 - f34**2 + 2*a3*(d5 - f13*f14 - f23*f24 + d1*f33 + d7*(f13**2 + f23**2 + f33**2) - f33*f34)]), 
poly([-4*a2*d6*f33, -8*d6*(d5 + f13*f14 + f23*f24 - d1*f33 - d7*(f13**2 + f23**2 + f33**2) + f33*f34), 4*a2*d6*f33]), poly([-8*d4*(a3 + d5), 0, 8*d4*(-a3 + d5)]), poly([-4*a2*d6*f33, 8*d6*(d5 - f13*f14 - f23*f24 + d1*f33 + d7*(f13**2 + f23**2 + f33**2) - f33*f34), 4*a2*d6*f33]), 
poly([a2**2 - a3**2 - d1**2 + d4**2 - d5**2 - 2*d4*d6 + d6**2 + 2*d5*d7*f13**2 - d7**2*f13**2 - 2*d5*f13*f14 + 2*d7*f13*f14 - f14**2 + 2*d5*d7*f23**2 - d7**2*f23**2 - 2*d5*f23*f24 + 2*d7*f23*f24 - f24**2 + 2*d5*d7*f33**2 - d7**2*f33**2 - 2*d5*f33*f34 + 2*d7*f33*f34 - f34**2 + 2*d1*(d5*f33 - d7*f33 + f34) - 
2*a3*(d5 + f13*f14 + f23*f24 - d1*f33 - d7*(f13**2 + f23**2 + f33**2) + f33*f34), -4*a2*(d1 - d5*f33 + d7*f33 - f34), -a2**2 + a3**2 + d1**2 - d4**2 + d5**2 + 2*d4*d6 - d6**2 - 2*d5*d7*f13**2 + d7**2*f13**2 + 2*d5*f13*f14 - 2*d7*f13*f14 + f14**2 - 2*d5*d7*f23**2 + d7**2*f23**2 + 2*d5*f23*f24 - 
2*d7*f23*f24 + f24**2 - 2*d5*d7*f33**2 + d7**2*f33**2 + 2*d5*f33*f34 - 2*d7*f33*f34 + f34**2 - 2*d1*(d5*f33 - d7*f33 + f34) - 2*a3*(d5 + f13*f14 + f23*f24 - d1*f33 - d7*(f13**2 + f23**2 + f33**2) + f33*f34)]), 
poly([4*a2*(d1 + d7*f33 - f34), 4*a2**2 - 4*(a3**2 + d1**2 - d4**2 - d5**2 + 2*d4*d6 - d6**2 + d7**2*f13**2 - 2*d7*f13*f14 + f14**2 + d7**2*f23**2 - 2*d7*f23*f24 + f24**2 + 2*d1*d7*f33 + d7**2*f33**2 - 2*d1*f34 - 2*d7*f33*f34 + f34**2), -4*a2*(d1 + d7*f33 - f34)]), 
poly([-a2**2 + a3**2 + d1**2 - d4**2 + d5**2 + 2*d4*d6 - d6**2 + 2*d5*d7*f13**2 + d7**2*f13**2 - 2*d5*f13*f14 - 2*d7*f13*f14 + f14**2 + 2*d5*d7*f23**2 + d7**2*f23**2 - 2*d5*f23*f24 - 2*d7*f23*f24 + f24**2 + 2*d5*d7*f33**2 + d7**2*f33**2 + 2*d1*(d5*f33 + d7*f33 - f34) - 2*d5*f33*f34 - 2*d7*f33*f34 + 
f34**2 + 2*a3*(d5 - f13*f14 - f23*f24 + d1*f33 + d7*(f13**2 + f23**2 + f33**2) - f33*f34), 4*a2*(d1 + d5*f33 + d7*f33 - f34), a2**2 - a3**2 - d1**2 + d4**2 - d5**2 - 2*d4*d6 + d6**2 - 2*d5*d7*f13**2 - d7**2*f13**2 + 2*d5*f13*f14 + 2*d7*f13*f14 - f14**2 - 2*d5*d7*f23**2 - d7**2*f23**2 + 
2*d5*f23*f24 + 2*d7*f23*f24 - f24**2 - 2*d5*d7*f33**2 - d7**2*f33**2 - 2*d1*(d5*f33 + d7*f33 - f34) + 2*d5*f33*f34 + 2*d7*f33*f34 - f34**2 + 2*a3*(d5 - f13*f14 - f23*f24 + d1*f33 + d7*(f13**2 + f23**2 + f33**2) - f33*f34)])]
,[poly([0]), poly([0]), poly([0]), poly([-2*a2*(-d1 + a3*f33 + d5*f33 - d7*f33 + f34), 2*(a2**2 + a3**2 - d1**2 + d4**2 - d5**2 + 2*d4*d6 + d6**2 + 2*d5*d7*f13**2 - d7**2*f13**2 - 2*d5*f13*f14 + 2*d7*f13*f14 - f14**2 + 2*d5*d7*f23**2 - d7**2*f23**2 - 2*d5*f23*f24 + 2*d7*f23*f24 - f24**2 + 2*d1*d5*f33 - 2*d1*d7*f33 + 
2*d5*d7*f33**2 - d7**2*f33**2 + 2*d1*f34 - 2*d5*f33*f34 + 2*d7*f33*f34 - f34**2), -2*a2*(d1 + a3*f33 - d5*f33 + d7*f33 - f34)]), 
poly([2*(a2**2 + a3**2 - d1**2 + d4**2 + 2*a3*d5 + d5**2 + 2*d4*d6 + d6**2 - d7**2*f13**2 + 2*d7*f13*f14 - f14**2 - d7**2*f23**2 + 2*d7*f23*f24 - f24**2 - 2*d1*d7*f33 - d7**2*f33**2 + 2*d1*f34 + 2*d7*f33*f34 - f34**2), -8*a2*(d1 + d7*f33 - f34), 
-2*(a2**2 + a3**2 - d1**2 + d4**2 - 2*a3*d5 + d5**2 + 2*d4*d6 + d6**2 - d7**2*f13**2 + 2*d7*f13*f14 - f14**2 - d7**2*f23**2 + 2*d7*f23*f24 - f24**2 - 2*d1*d7*f33 - d7**2*f33**2 + 2*d1*f34 + 2*d7*f33*f34 - f34**2)]), 
poly([-2*a2*(d1 + a3*f33 + d5*f33 + d7*f33 - f34), -2*(a2**2 + a3**2 - d1**2 + d4**2 - d5**2 + 2*d4*d6 + d6**2 - 2*d5*d7*f13**2 - d7**2*f13**2 + 2*d5*f13*f14 + 2*d7*f13*f14 - f14**2 - 2*d5*d7*f23**2 - d7**2*f23**2 + 2*d5*f23*f24 + 2*d7*f23*f24 - f24**2 - 2*d1*d5*f33 - 2*d1*d7*f33 - 2*d5*d7*f33**2 - 
d7**2*f33**2 + 2*d1*f34 + 2*d5*f33*f34 + 2*d7*f33*f34 - f34**2), 2*a2*(d1 - a3*f33 + d5*f33 + d7*f33 - f34)]), poly([4*d6*(a3 + d5 - d7*f13**2 + f13*f14 - d7*f23**2 + f23*f24 - d1*f33 - d7*f33**2 + f33*f34), -8*a2*d6*f33, 
4*d6*(a3 - d5 + d7*f13**2 - f13*f14 + d7*f23**2 - f23*f24 + d1*f33 + d7*f33**2 - f33*f34)]), poly([0, -16*d4*d5]), poly([-4*d6*(a3 + d5 + d7*f13**2 - f13*f14 + d7*f23**2 - f23*f24 + d1*f33 + d7*f33**2 - f33*f34), -8*a2*d6*f33, 
4*d6*(-a3 + d5 + d7*f13**2 - f13*f14 + d7*f23**2 - f23*f24 + d1*f33 + d7*f33**2 - f33*f34)]), poly([-2*a2*(-d1 + a3*f33 + d5*f33 - d7*f33 + f34), 2*(a2**2 + a3**2 - d1**2 + d4**2 - d5**2 - 2*d4*d6 + d6**2 + 2*d5*d7*f13**2 - d7**2*f13**2 - 2*d5*f13*f14 + 2*d7*f13*f14 - f14**2 + 2*d5*d7*f23**2 - 
d7**2*f23**2 - 2*d5*f23*f24 + 2*d7*f23*f24 - f24**2 + 2*d1*d5*f33 - 2*d1*d7*f33 + 2*d5*d7*f33**2 - d7**2*f33**2 + 2*d1*f34 - 2*d5*f33*f34 + 2*d7*f33*f34 - f34**2), -2*a2*(d1 + a3*f33 - d5*f33 + d7*f33 - f34)]), 
poly([-2*(a2**2 + a3**2 - d1**2 + d4**2 + 2*a3*d5 + d5**2 - 2*d4*d6 + d6**2 - d7**2*f13**2 + 2*d7*f13*f14 - f14**2 - d7**2*f23**2 + 2*d7*f23*f24 - f24**2 - 2*d1*d7*f33 - d7**2*f33**2 + 2*d1*f34 + 2*d7*f33*f34 - f34**2), 8*a2*(d1 + d7*f33 - f34), 
2*(a2**2 + a3**2 - d1**2 + d4**2 - 2*a3*d5 + d5**2 - 2*d4*d6 + d6**2 - d7**2*f13**2 + 2*d7*f13*f14 - f14**2 - d7**2*f23**2 + 2*d7*f23*f24 - f24**2 - 2*d1*d7*f33 - d7**2*f33**2 + 2*d1*f34 + 2*d7*f33*f34 - f34**2)]), 
poly([-2*a2*(d1 + a3*f33 + d5*f33 + d7*f33 - f34), -2*(a2**2 + a3**2 - d1**2 + d4**2 - d5**2 - 2*d4*d6 + d6**2 - 2*d5*d7*f13**2 - d7**2*f13**2 + 2*d5*f13*f14 + 2*d7*f13*f14 - f14**2 - 2*d5*d7*f23**2 - d7**2*f23**2 + 2*d5*f23*f24 + 2*d7*f23*f24 - f24**2 - 2*d1*d5*f33 - 2*d1*d7*f33 - 2*d5*d7*f33**2 - 
d7**2*f33**2 + 2*d1*f34 + 2*d5*f33*f34 + 2*d7*f33*f34 - f34**2), 2*a2*(d1 - a3*f33 + d5*f33 + d7*f33 - f34)])]
,[poly([0]), poly([0]), poly([0]), poly([(1/(a2*den2))*(2*a2*(a3 + d5)*(d4 + d6)*den2 - a2**2*(f14*f23 - f13*f24)*(f13*f14 + f23*f24 + d1*f33 - d7*(f13**2 + f23**2 - f33**2) - f33*f34) + 
(f14*f23 - f13*f24)*(f13*f14 + f23*f24 - d1*f33 - d7*(f13**2 + f23**2 + f33**2) + f33*f34)*(-a3**2 + d1**2 - d4**2 - 2*a3*d5 - d5**2 - 2*d4*d6 - d6**2 + d7**2*f13**2 - 2*d7*f13*f14 + f14**2 + d7**2*f23**2 - 2*d7*f23*f24 + f24**2 + 2*d1*d7*f33 + d7**2*f33**2 - 2*d1*f34 - 2*d7*f33*f34 + f34**2)), 0, 
-2*a3*(d4 + d6) + 2*d5*(d4 + d6) + (a2*(f14*f23 - f13*f24)*(f13*f14 + f23*f24 + d1*f33 - d7*(f13**2 + f23**2 - f33**2) - f33*f34))/(f13*f14 - d7*(f13**2 + f23**2) + f23*f24) - (a3**2*(f14*f23 - f13*f24)*(f13*f14 + f23*f24 - d1*f33 - d7*(f13**2 + f23**2 + f33**2) + f33*f34))/
(a2*den2) + (2*a3*d5*(f14*f23 - f13*f24)*(f13*f14 + f23*f24 - d1*f33 - d7*(f13**2 + f23**2 + f33**2) + f33*f34))/(a2*den2) + 
((f14*f23 - f13*f24)*(f13*f14 + f23*f24 - d1*f33 - d7*(f13**2 + f23**2 + f33**2) + f33*f34)*(d1**2 - d4**2 - d5**2 - 2*d4*d6 - d6**2 + d7**2*f13**2 - 2*d7*f13*f14 + f14**2 + d7**2*f23**2 - 2*d7*f23*f24 + f24**2 + 2*d1*d7*f33 + d7**2*f33**2 - 2*d1*f34 - 2*d7*f33*f34 + f34**2))/
(a2*den2)]), poly([0, -8*a3*(d4 + d6)]), poly([(1/(a2*den2))*(-2*a2*(a3 + d5)*(d4 + d6)*den2 - 
a2**2*(f14*f23 - f13*f24)*(f13*f14 + f23*f24 + d1*f33 - d7*(f13**2 + f23**2 - f33**2) - f33*f34) + (f14*f23 - f13*f24)*(f13*f14 + f23*f24 - d1*f33 - d7*(f13**2 + f23**2 + f33**2) + f33*f34)*(-a3**2 + d1**2 - d4**2 - 2*a3*d5 - d5**2 - 2*d4*d6 - d6**2 + d7**2*f13**2 - 2*d7*f13*f14 + f14**2 + 
d7**2*f23**2 - 2*d7*f23*f24 + f24**2 + 2*d1*d7*f33 + d7**2*f33**2 - 2*d1*f34 - 2*d7*f33*f34 + f34**2)), 0, 2*a3*(d4 + d6) - 2*d5*(d4 + d6) + (a2*(f14*f23 - f13*f24)*(f13*f14 + f23*f24 + d1*f33 - d7*(f13**2 + f23**2 - f33**2) - f33*f34))/(f13*f14 - d7*(f13**2 + f23**2) + f23*f24) - 
(a3**2*(f14*f23 - f13*f24)*(f13*f14 + f23*f24 - d1*f33 - d7*(f13**2 + f23**2 + f33**2) + f33*f34))/(a2*den2) + (2*a3*d5*(f14*f23 - f13*f24)*(f13*f14 + f23*f24 - d1*f33 - d7*(f13**2 + f23**2 + f33**2) + f33*f34))/
(a2*den2) + ((f14*f23 - f13*f24)*(f13*f14 + f23*f24 - d1*f33 - d7*(f13**2 + f23**2 + f33**2) + f33*f34)*(d1**2 - d4**2 - d5**2 - 2*d4*d6 - d6**2 + d7**2*f13**2 - 2*d7*f13*f14 + f14**2 + d7**2*f23**2 - 2*d7*f23*f24 + f24**2 + 2*d1*d7*f33 + d7**2*f33**2 - 
2*d1*f34 - 2*d7*f33*f34 + f34**2))/(a2*den2)]), poly([0, -((8*a3*d6*(f14*f23 - f13*f24)*(f13*f14 + f23*f24 - d1*f33 - d7*(f13**2 + f23**2 + f33**2) + f33*f34))/(a2*den2))]), 
poly([-((1/den2)*(4*((-d1**2)*d7*f13**2 - d4**2*d7*f13**2 + d5**2*d7*f13**2 + d6**2*d7*f13**2 + d7**3*f13**4 + d1**2*f13*f14 + d4**2*f13*f14 - d5**2*f13*f14 - d6**2*f13*f14 - 3*d7**2*f13**3*f14 + 3*d7*f13**2*f14**2 - f13*f14**3 - d1**2*d7*f23**2 - d4**2*d7*f23**2 + 
d5**2*d7*f23**2 + d6**2*d7*f23**2 + 2*d7**3*f13**2*f23**2 - 3*d7**2*f13*f14*f23**2 + d7*f14**2*f23**2 + d7**3*f23**4 + d1**2*f23*f24 + d4**2*f23*f24 - d5**2*f23*f24 - d6**2*f23*f24 - 3*d7**2*f13**2*f23*f24 + 4*d7*f13*f14*f23*f24 - f14**2*f23*f24 - 3*d7**2*f23**3*f24 + d7*f13**2*f24**2 - f13*f14*f24**2 + 
3*d7*f23**2*f24**2 - f23*f24**3 + a3**2*den2 + 2*a3*d5*den2 + a2**2*(f13*f14 - d7*(f13**2 + f23**2) + f23*f24) - 2*d1*d7*f13*f14*f33 + 2*d1*f14**2*f33 - 2*d1*d7*f23*f24*f33 + 2*d1*f24**2*f33 + 
d7**3*f13**2*f33**2 - 3*d7**2*f13*f14*f33**2 + 2*d7*f14**2*f33**2 + d7**3*f23**2*f33**2 - 3*d7**2*f23*f24*f33**2 + 2*d7*f24**2*f33**2 + 2*d1*d7*f13**2*f34 - 2*d1*f13*f14*f34 + 2*d1*d7*f23**2*f34 - 2*d1*f23*f24*f34 + 2*d7*f13*f14*f33*f34 - 2*f14**2*f33*f34 + 2*d7*f23*f24*f33*f34 - 
2*f24**2*f33*f34 - d7*f13**2*f34**2 + f13*f14*f34**2 - d7*f23**2*f34**2 + f23*f24*f34**2))), 0, 
4*(a2**2 - a3**2 + 2*a3*d5 + (1/den2)*((-d5**2)*d7*f13**2 - d6**2*d7*f13**2 - d7**3*f13**4 + d5**2*f13*f14 + d6**2*f13*f14 + 3*d7**2*f13**3*f14 - 3*d7*f13**2*f14**2 + f13*f14**3 - d5**2*d7*f23**2 - d6**2*d7*f23**2 - 2*d7**3*f13**2*f23**2 + 3*d7**2*f13*f14*f23**2 - 
d7*f14**2*f23**2 - d7**3*f23**4 + d5**2*f23*f24 + d6**2*f23*f24 + 3*d7**2*f13**2*f23*f24 - 4*d7*f13*f14*f23*f24 + f14**2*f23*f24 + 3*d7**2*f23**3*f24 - d7*f13**2*f24**2 + f13*f14*f24**2 - 3*d7*f23**2*f24**2 + f23*f24**3 + d1**2*den2 + 
d4**2*den2 - d7**3*f13**2*f33**2 + 3*d7**2*f13*f14*f33**2 - 2*d7*f14**2*f33**2 - d7**3*f23**2*f33**2 + 3*d7**2*f23*f24*f33**2 - 2*d7*f24**2*f33**2 - 2*d7*f13*f14*f33*f34 + 2*f14**2*f33*f34 - 2*d7*f23*f24*f33*f34 + 2*f24**2*f33*f34 + d7*f13**2*f34**2 - 
f13*f14*f34**2 + d7*f23**2*f34**2 - f23*f24*f34**2 - 2*d1*(f14**2*f33 + f24**2*f33 - f13*f14*f34 - f23*f24*f34 + d7*((-f13)*f14*f33 - f23*f24*f33 + f13**2*f34 + f23**2*f34))))]), 
poly([0, -((8*a3*d6*(f14*f23 - f13*f24)*(f13*f14 + f23*f24 - d1*f33 - d7*(f13**2 + f23**2 + f33**2) + f33*f34))/(a2*den2))]), 
poly([(1/(a2*den2))*(2*a2*(a3 + d5)*(d4 - d6)*den2 - a2**2*(f14*f23 - f13*f24)*(f13*f14 + f23*f24 + d1*f33 - d7*(f13**2 + f23**2 - f33**2) - f33*f34) + 
(f14*f23 - f13*f24)*(f13*f14 + f23*f24 - d1*f33 - d7*(f13**2 + f23**2 + f33**2) + f33*f34)*(-a3**2 + d1**2 - d4**2 - 2*a3*d5 - d5**2 + 2*d4*d6 - d6**2 + d7**2*f13**2 - 2*d7*f13*f14 + f14**2 + d7**2*f23**2 - 2*d7*f23*f24 + f24**2 + 2*d1*d7*f33 + d7**2*f33**2 - 2*d1*f34 - 2*d7*f33*f34 + f34**2)), 0, 
-2*a3*(d4 - d6) + 2*d5*(d4 - d6) + (a2*(f14*f23 - f13*f24)*(f13*f14 + f23*f24 + d1*f33 - d7*(f13**2 + f23**2 - f33**2) - f33*f34))/(f13*f14 - d7*(f13**2 + f23**2) + f23*f24) - (a3**2*(f14*f23 - f13*f24)*(f13*f14 + f23*f24 - d1*f33 - d7*(f13**2 + f23**2 + f33**2) + f33*f34))/
(a2*den2) + (2*a3*d5*(f14*f23 - f13*f24)*(f13*f14 + f23*f24 - d1*f33 - d7*(f13**2 + f23**2 + f33**2) + f33*f34))/(a2*den2) + 
((f14*f23 - f13*f24)*(f13*f14 + f23*f24 - d1*f33 - d7*(f13**2 + f23**2 + f33**2) + f33*f34)*(d1**2 - d4**2 - d5**2 + 2*d4*d6 - d6**2 + d7**2*f13**2 - 2*d7*f13*f14 + f14**2 + d7**2*f23**2 - 2*d7*f23*f24 + f24**2 + 2*d1*d7*f33 + d7**2*f33**2 - 2*d1*f34 - 2*d7*f33*f34 + f34**2))/
(a2*den2)]), poly([0, 8*a3*(d4 - d6)]), poly([(1/(a2*den2))*(-2*a2*(a3 + d5)*(d4 - d6)*den2 - 
a2**2*(f14*f23 - f13*f24)*(f13*f14 + f23*f24 + d1*f33 - d7*(f13**2 + f23**2 - f33**2) - f33*f34) + (f14*f23 - f13*f24)*(f13*f14 + f23*f24 - d1*f33 - d7*(f13**2 + f23**2 + f33**2) + f33*f34)*(-a3**2 + d1**2 - d4**2 - 2*a3*d5 - d5**2 + 2*d4*d6 - d6**2 + d7**2*f13**2 - 2*d7*f13*f14 + f14**2 + 
d7**2*f23**2 - 2*d7*f23*f24 + f24**2 + 2*d1*d7*f33 + d7**2*f33**2 - 2*d1*f34 - 2*d7*f33*f34 + f34**2)), 0, 2*a3*(d4 - d6) - 2*d5*(d4 - d6) + (a2*(f14*f23 - f13*f24)*(f13*f14 + f23*f24 + d1*f33 - d7*(f13**2 + f23**2 - f33**2) - f33*f34))/(f13*f14 - d7*(f13**2 + f23**2) + f23*f24) - 
(a3**2*(f14*f23 - f13*f24)*(f13*f14 + f23*f24 - d1*f33 - d7*(f13**2 + f23**2 + f33**2) + f33*f34))/(a2*den2) + (2*a3*d5*(f14*f23 - f13*f24)*(f13*f14 + f23*f24 - d1*f33 - d7*(f13**2 + f23**2 + f33**2) + f33*f34))/
(a2*den2) + ((f14*f23 - f13*f24)*(f13*f14 + f23*f24 - d1*f33 - d7*(f13**2 + f23**2 + f33**2) + f33*f34)*(d1**2 - d4**2 - d5**2 + 2*d4*d6 - d6**2 + d7**2*f13**2 - 2*d7*f13*f14 + f14**2 + d7**2*f23**2 - 2*d7*f23*f24 + f24**2 + 2*d1*d7*f33 + d7**2*f33**2 - 
2*d1*f34 - 2*d7*f33*f34 + f34**2))/(a2*den2)])]
,[poly([(a2**2*(f14*f23 - f13*f24) - 2*a2*(d4 + d6)*den2 + (f14*f23 - f13*f24)*(-a3**2 + d1**2 - d4**2 - 2*a3*d5 - d5**2 - 2*d4*d6 - d6**2 + d7**2*f13**2 - 2*d7*f13*f14 + f14**2 + d7**2*f23**2 - 2*d7*f23*f24 + f24**2 + 2*d1*d7*f33 + d7**2*f33**2 - 2*d1*f34 - 
2*d7*f33*f34 + f34**2))/(2*a2*den2), 0, (a2**2*(f14*f23 - f13*f24) - 2*a2*(d4 + d6)*den2 + 
(f14*f23 - f13*f24)*(-a3**2 + d1**2 - d4**2 + 2*a3*d5 - d5**2 - 2*d4*d6 - d6**2 + d7**2*f13**2 - 2*d7*f13*f14 + f14**2 + d7**2*f23**2 - 2*d7*f23*f24 + f24**2 + 2*d1*d7*f33 + d7**2*f33**2 - 2*d1*f34 - 2*d7*f33*f34 + f34**2))/(2*a2*den2)]), poly([0]), 
poly([(a2**2*(f14*f23 - f13*f24) - 2*a2*(d4 + d6)*den2 + (f14*f23 - f13*f24)*(-a3**2 + d1**2 - d4**2 - 2*a3*d5 - d5**2 - 2*d4*d6 - d6**2 + d7**2*f13**2 - 2*d7*f13*f14 + f14**2 + d7**2*f23**2 - 2*d7*f23*f24 + f24**2 + 2*d1*d7*f33 + d7**2*f33**2 - 2*d1*f34 - 
2*d7*f33*f34 + f34**2))/(2*a2*den2), 0, (a2**2*(f14*f23 - f13*f24) - 2*a2*(d4 + d6)*den2 + 
(f14*f23 - f13*f24)*(-a3**2 + d1**2 - d4**2 + 2*a3*d5 - d5**2 - 2*d4*d6 - d6**2 + d7**2*f13**2 - 2*d7*f13*f14 + f14**2 + d7**2*f23**2 - 2*d7*f23*f24 + f24**2 + 2*d1*d7*f33 + d7**2*f33**2 - 2*d1*f34 - 2*d7*f33*f34 + f34**2))/(2*a2*den2)]), 
poly([0, (4*a3*d6*((-f14)*f23 + f13*f24))/(a2*den2)]), poly([(4*den1)/den2, 0, 
(4*den1)/den2]), poly([0, (4*a3*d6*((-f14)*f23 + f13*f24))/(a2*den2)]), 
poly([(a2**2*(f14*f23 - f13*f24) - 2*a2*(d4 - d6)*den2 + (f14*f23 - f13*f24)*(-a3**2 + d1**2 - d4**2 - 2*a3*d5 - d5**2 + 2*d4*d6 - d6**2 + d7**2*f13**2 - 2*d7*f13*f14 + f14**2 + d7**2*f23**2 - 2*d7*f23*f24 + f24**2 + 2*d1*d7*f33 + d7**2*f33**2 - 2*d1*f34 - 
2*d7*f33*f34 + f34**2))/(2*a2*den2), 0, (a2**2*(f14*f23 - f13*f24) - 2*a2*(d4 - d6)*den2 + 
(f14*f23 - f13*f24)*(-a3**2 + d1**2 - d4**2 + 2*a3*d5 - d5**2 + 2*d4*d6 - d6**2 + d7**2*f13**2 - 2*d7*f13*f14 + f14**2 + d7**2*f23**2 - 2*d7*f23*f24 + f24**2 + 2*d1*d7*f33 + d7**2*f33**2 - 2*d1*f34 - 2*d7*f33*f34 + f34**2))/(2*a2*den2)]), poly([0]), 
poly([(a2**2*(f14*f23 - f13*f24) - 2*a2*(d4 - d6)*den2 + (f14*f23 - f13*f24)*(-a3**2 + d1**2 - d4**2 - 2*a3*d5 - d5**2 + 2*d4*d6 - d6**2 + d7**2*f13**2 - 2*d7*f13*f14 + f14**2 + d7**2*f23**2 - 2*d7*f23*f24 + f24**2 + 2*d1*d7*f33 + d7**2*f33**2 - 2*d1*f34 - 
2*d7*f33*f34 + f34**2))/(2*a2*den2), 0, (a2**2*(f14*f23 - f13*f24) - 2*a2*(d4 - d6)*den2 + 
(f14*f23 - f13*f24)*(-a3**2 + d1**2 - d4**2 + 2*a3*d5 - d5**2 + 2*d4*d6 - d6**2 + d7**2*f13**2 - 2*d7*f13*f14 + f14**2 + d7**2*f23**2 - 2*d7*f23*f24 + f24**2 + 2*d1*d7*f33 + d7**2*f33**2 - 2*d1*f34 - 2*d7*f33*f34 + f34**2))/(2*a2*den2)]), poly([0]), poly([0]), poly([0])]
,[poly([-((1/(2*den2))*((-d1**2)*f13**2 + d4**2*f13**2 + d5**2*f13**2 + 2*d4*d6*f13**2 + d6**2*f13**2 - 2*d5*d7*f13**2 + d7**2*f13**4 + 2*d5*f13*f14 - 2*d7*f13**3*f14 + f13**2*f14**2 - d1**2*f23**2 + d4**2*f23**2 + d5**2*f23**2 + 2*d4*d6*f23**2 + d6**2*f23**2 - 2*d5*d7*f23**2 + 
2*d7**2*f13**2*f23**2 - 2*d7*f13*f14*f23**2 - f14**2*f23**2 + d7**2*f23**4 - a2**2*(f13**2 + f23**2) + a3**2*(f13**2 + f23**2) + 2*d5*f23*f24 - 2*d7*f13**2*f23*f24 + 4*f13*f14*f23*f24 - 2*d7*f23**3*f24 - f13**2*f24**2 + f23**2*f24**2 + 
2*a3*(f13*f14 + d5*(f13**2 + f23**2) - d7*(f13**2 + f23**2) + f23*f24) - 2*d1*f13*f14*f33 - 2*d1*f23*f24*f33 + d7**2*f13**2*f33**2 - 2*d7*f13*f14*f33**2 + d7**2*f23**2*f33**2 - 2*d7*f23*f24*f33**2 + 2*d1*f13**2*f34 + 2*d1*f23**2*f34 + 2*f13*f14*f33*f34 + 2*f23*f24*f33*f34 - f13**2*f34**2 - 
f23**2*f34**2)), 0, -((1/(2*den2))*((-d1**2)*f13**2 + d4**2*f13**2 + d5**2*f13**2 + 2*d4*d6*f13**2 + d6**2*f13**2 - 2*d5*d7*f13**2 + d7**2*f13**4 + 2*d5*f13*f14 - 2*d7*f13**3*f14 + f13**2*f14**2 - d1**2*f23**2 + d4**2*f23**2 + d5**2*f23**2 + 2*d4*d6*f23**2 + 
d6**2*f23**2 - 2*d5*d7*f23**2 + 2*d7**2*f13**2*f23**2 - 2*d7*f13*f14*f23**2 - f14**2*f23**2 + d7**2*f23**4 - a2**2*(f13**2 + f23**2) + a3**2*(f13**2 + f23**2) + 2*d5*f23*f24 - 2*d7*f13**2*f23*f24 + 4*f13*f14*f23*f24 - 2*d7*f23**3*f24 - f13**2*f24**2 + f23**2*f24**2 - 
2*a3*(f13*f14 + d5*(f13**2 + f23**2) - d7*(f13**2 + f23**2) + f23*f24) - 2*d1*f13*f14*f33 - 2*d1*f23*f24*f33 + d7**2*f13**2*f33**2 - 2*d7*f13*f14*f33**2 + d7**2*f23**2*f33**2 - 2*d7*f23*f24*f33**2 + 2*d1*f13**2*f34 + 2*d1*f23**2*f34 + 2*f13*f14*f33*f34 + 2*f23*f24*f33*f34 - f13**2*f34**2 - 
f23**2*f34**2))]), poly([0, -4*a3]), poly([-((1/(2*den2))*((-d1**2)*f13**2 + d4**2*f13**2 + d5**2*f13**2 + 2*d4*d6*f13**2 + d6**2*f13**2 + 2*d5*d7*f13**2 + d7**2*f13**4 - 2*d5*f13*f14 - 2*d7*f13**3*f14 + f13**2*f14**2 - d1**2*f23**2 + d4**2*f23**2 + d5**2*f23**2 + 
2*d4*d6*f23**2 + d6**2*f23**2 + 2*d5*d7*f23**2 + 2*d7**2*f13**2*f23**2 - 2*d7*f13*f14*f23**2 - f14**2*f23**2 + d7**2*f23**4 - a2**2*(f13**2 + f23**2) + a3**2*(f13**2 + f23**2) - 2*d5*f23*f24 - 2*d7*f13**2*f23*f24 + 4*f13*f14*f23*f24 - 2*d7*f23**3*f24 - f13**2*f24**2 + f23**2*f24**2 + 
2*a3*((-f13)*f14 + d5*(f13**2 + f23**2) + d7*(f13**2 + f23**2) - f23*f24) - 2*d1*f13*f14*f33 - 2*d1*f23*f24*f33 + d7**2*f13**2*f33**2 - 2*d7*f13*f14*f33**2 + d7**2*f23**2*f33**2 - 2*d7*f23*f24*f33**2 + 2*d1*f13**2*f34 + 2*d1*f23**2*f34 + 2*f13*f14*f33*f34 + 2*f23*f24*f33*f34 - f13**2*f34**2 - 
f23**2*f34**2)), 0, -((1/(2*den2))*((-d1**2)*f13**2 + d4**2*f13**2 + d5**2*f13**2 + 2*d4*d6*f13**2 + d6**2*f13**2 + 2*d5*d7*f13**2 + d7**2*f13**4 - 2*d5*f13*f14 - 2*d7*f13**3*f14 + f13**2*f14**2 - d1**2*f23**2 + d4**2*f23**2 + d5**2*f23**2 + 2*d4*d6*f23**2 + 
d6**2*f23**2 + 2*d5*d7*f23**2 + 2*d7**2*f13**2*f23**2 - 2*d7*f13*f14*f23**2 - f14**2*f23**2 + d7**2*f23**4 - a2**2*(f13**2 + f23**2) + a3**2*(f13**2 + f23**2) - 2*d5*f23*f24 - 2*d7*f13**2*f23*f24 + 4*f13*f14*f23*f24 - 2*d7*f23**3*f24 - f13**2*f24**2 + f23**2*f24**2 - 
2*a3*((-f13)*f14 + d5*(f13**2 + f23**2) + d7*(f13**2 + f23**2) - f23*f24) - 2*d1*f13*f14*f33 - 2*d1*f23*f24*f33 + d7**2*f13**2*f33**2 - 2*d7*f13*f14*f33**2 + d7**2*f23**2*f33**2 - 2*d7*f23*f24*f33**2 + 2*d1*f13**2*f34 + 2*d1*f23**2*f34 + 2*f13*f14*f33*f34 + 2*f23*f24*f33*f34 - f13**2*f34**2 - 
f23**2*f34**2))]), poly([0, -((4*a3*d6*(f13**2 + f23**2))/den2)]), poly([(4*(a2*(f14*f23 - f13*f24) + d4*den2))/den2, 0, 
(4*(a2*(f14*f23 - f13*f24) + d4*den2))/den2]), poly([0, -((4*a3*d6*(f13**2 + f23**2))/den2)]), 
poly([-((1/(2*den2))*((-d1**2)*f13**2 + d4**2*f13**2 + d5**2*f13**2 - 2*d4*d6*f13**2 + d6**2*f13**2 - 2*d5*d7*f13**2 + d7**2*f13**4 + 2*d5*f13*f14 - 2*d7*f13**3*f14 + f13**2*f14**2 - d1**2*f23**2 + d4**2*f23**2 + d5**2*f23**2 - 2*d4*d6*f23**2 + d6**2*f23**2 - 
2*d5*d7*f23**2 + 2*d7**2*f13**2*f23**2 - 2*d7*f13*f14*f23**2 - f14**2*f23**2 + d7**2*f23**4 - a2**2*(f13**2 + f23**2) + a3**2*(f13**2 + f23**2) + 2*d5*f23*f24 - 2*d7*f13**2*f23*f24 + 4*f13*f14*f23*f24 - 2*d7*f23**3*f24 - f13**2*f24**2 + f23**2*f24**2 + 
2*a3*(f13*f14 + d5*(f13**2 + f23**2) - d7*(f13**2 + f23**2) + f23*f24) - 2*d1*f13*f14*f33 - 2*d1*f23*f24*f33 + d7**2*f13**2*f33**2 - 2*d7*f13*f14*f33**2 + d7**2*f23**2*f33**2 - 2*d7*f23*f24*f33**2 + 2*d1*f13**2*f34 + 2*d1*f23**2*f34 + 2*f13*f14*f33*f34 + 2*f23*f24*f33*f34 - f13**2*f34**2 - 
f23**2*f34**2)), 0, -((1/(2*den2))*((-d1**2)*f13**2 + d4**2*f13**2 + d5**2*f13**2 - 2*d4*d6*f13**2 + d6**2*f13**2 - 2*d5*d7*f13**2 + d7**2*f13**4 + 2*d5*f13*f14 - 2*d7*f13**3*f14 + f13**2*f14**2 - d1**2*f23**2 + d4**2*f23**2 + d5**2*f23**2 - 2*d4*d6*f23**2 + 
d6**2*f23**2 - 2*d5*d7*f23**2 + 2*d7**2*f13**2*f23**2 - 2*d7*f13*f14*f23**2 - f14**2*f23**2 + d7**2*f23**4 - a2**2*(f13**2 + f23**2) + a3**2*(f13**2 + f23**2) + 2*d5*f23*f24 - 2*d7*f13**2*f23*f24 + 4*f13*f14*f23*f24 - 2*d7*f23**3*f24 - f13**2*f24**2 + f23**2*f24**2 - 
2*a3*(f13*f14 + d5*(f13**2 + f23**2) - d7*(f13**2 + f23**2) + f23*f24) - 2*d1*f13*f14*f33 - 2*d1*f23*f24*f33 + d7**2*f13**2*f33**2 - 2*d7*f13*f14*f33**2 + d7**2*f23**2*f33**2 - 2*d7*f23*f24*f33**2 + 2*d1*f13**2*f34 + 2*d1*f23**2*f34 + 2*f13*f14*f33*f34 + 2*f23*f24*f33*f34 - f13**2*f34**2 - 
f23**2*f34**2))]), poly([0, 4*a3]), poly([-((1/(2*den2))*((-d1**2)*f13**2 + d4**2*f13**2 + d5**2*f13**2 - 2*d4*d6*f13**2 + d6**2*f13**2 + 2*d5*d7*f13**2 + d7**2*f13**4 - 2*d5*f13*f14 - 2*d7*f13**3*f14 + f13**2*f14**2 - d1**2*f23**2 + d4**2*f23**2 + d5**2*f23**2 - 
2*d4*d6*f23**2 + d6**2*f23**2 + 2*d5*d7*f23**2 + 2*d7**2*f13**2*f23**2 - 2*d7*f13*f14*f23**2 - f14**2*f23**2 + d7**2*f23**4 - a2**2*(f13**2 + f23**2) + a3**2*(f13**2 + f23**2) - 2*d5*f23*f24 - 2*d7*f13**2*f23*f24 + 4*f13*f14*f23*f24 - 2*d7*f23**3*f24 - f13**2*f24**2 + f23**2*f24**2 + 
2*a3*((-f13)*f14 + d5*(f13**2 + f23**2) + d7*(f13**2 + f23**2) - f23*f24) - 2*d1*f13*f14*f33 - 2*d1*f23*f24*f33 + d7**2*f13**2*f33**2 - 2*d7*f13*f14*f33**2 + d7**2*f23**2*f33**2 - 2*d7*f23*f24*f33**2 + 2*d1*f13**2*f34 + 2*d1*f23**2*f34 + 2*f13*f14*f33*f34 + 2*f23*f24*f33*f34 - f13**2*f34**2 - 
f23**2*f34**2)), 0, -((1/(2*den2))*((-d1**2)*f13**2 + d4**2*f13**2 + d5**2*f13**2 - 2*d4*d6*f13**2 + d6**2*f13**2 + 2*d5*d7*f13**2 + d7**2*f13**4 - 2*d5*f13*f14 - 2*d7*f13**3*f14 + f13**2*f14**2 - d1**2*f23**2 + d4**2*f23**2 + d5**2*f23**2 - 2*d4*d6*f23**2 + 
d6**2*f23**2 + 2*d5*d7*f23**2 + 2*d7**2*f13**2*f23**2 - 2*d7*f13*f14*f23**2 - f14**2*f23**2 + d7**2*f23**4 - a2**2*(f13**2 + f23**2) + a3**2*(f13**2 + f23**2) - 2*d5*f23*f24 - 2*d7*f13**2*f23*f24 + 4*f13*f14*f23*f24 - 2*d7*f23**3*f24 - f13**2*f24**2 + f23**2*f24**2 - 
2*a3*((-f13)*f14 + d5*(f13**2 + f23**2) + d7*(f13**2 + f23**2) - f23*f24) - 2*d1*f13*f14*f33 - 2*d1*f23*f24*f33 + d7**2*f13**2*f33**2 - 2*d7*f13*f14*f33**2 + d7**2*f23**2*f33**2 - 2*d7*f23*f24*f33**2 + 2*d1*f13**2*f34 + 2*d1*f23**2*f34 + 2*f13*f14*f33*f34 + 2*f23*f24*f33*f34 - f13**2*f34**2 - 
f23**2*f34**2))]), poly([0]), poly([0]), poly([0])]
,[poly([(1/(2*a2*den2))*(a2**2*(d1*(f13**2 + f23**2) - f13*f14*f33 + 2*d7*(f13**2 + f23**2)*f33 - f23*f24*f33 - f13**2*f34 - f23**2*f34) + 
(-a3**2 + d1**2 - d4**2 - 2*a3*d5 - d5**2 - 2*d4*d6 - d6**2 + d7**2*f13**2 - 2*d7*f13*f14 + f14**2 + d7**2*f23**2 - 2*d7*f23*f24 + f24**2 + 2*d1*d7*f33 + d7**2*f33**2 - 2*d1*f34 - 2*d7*f33*f34 + f34**2)*(d1*(f13**2 + f23**2) + f13*f14*f33 - f13**2*f34 + f23*(f24*f33 - f23*f34))), -2*a3, 
(1/(2*a2*den2))*(a2**2*(d1*(f13**2 + f23**2) - f13*f14*f33 + 2*d7*(f13**2 + f23**2)*f33 - f23*f24*f33 - f13**2*f34 - f23**2*f34) - a3**2*(d1*(f13**2 + f23**2) + f13*f14*f33 - f13**2*f34 + f23*(f24*f33 - f23*f34)) + 
2*a3*d5*(d1*(f13**2 + f23**2) + f13*f14*f33 - f13**2*f34 + f23*(f24*f33 - f23*f34)) + (d1**2 - d4**2 - d5**2 - 2*d4*d6 - d6**2 + d7**2*f13**2 - 2*d7*f13*f14 + f14**2 + d7**2*f23**2 - 2*d7*f23*f24 + f24**2 + 2*d1*d7*f33 + d7**2*f33**2 - 2*d1*f34 - 2*d7*f33*f34 + f34**2)*
(d1*(f13**2 + f23**2) + f13*f14*f33 - f13**2*f34 + f23*(f24*f33 - f23*f34)))]), poly([-2*(a3 + d5), 0, 2*(a3 - d5)]), 
poly([(1/(2*a2*den2))*(a2**2*(d1*(f13**2 + f23**2) - f13*f14*f33 + 2*d7*(f13**2 + f23**2)*f33 - f23*f24*f33 - f13**2*f34 - f23**2*f34) + 
(-a3**2 + d1**2 - d4**2 - 2*a3*d5 - d5**2 - 2*d4*d6 - d6**2 + d7**2*f13**2 - 2*d7*f13*f14 + f14**2 + d7**2*f23**2 - 2*d7*f23*f24 + f24**2 + 2*d1*d7*f33 + d7**2*f33**2 - 2*d1*f34 - 2*d7*f33*f34 + f34**2)*(d1*(f13**2 + f23**2) + f13*f14*f33 - f13**2*f34 + f23*(f24*f33 - f23*f34))), 2*a3, 
(1/(2*a2*den2))*(a2**2*(d1*(f13**2 + f23**2) - f13*f14*f33 + 2*d7*(f13**2 + f23**2)*f33 - f23*f24*f33 - f13**2*f34 - f23**2*f34) - a3**2*(d1*(f13**2 + f23**2) + f13*f14*f33 - f13**2*f34 + f23*(f24*f33 - f23*f34)) + 
2*a3*d5*(d1*(f13**2 + f23**2) + f13*f14*f33 - f13**2*f34 + f23*(f24*f33 - f23*f34)) + (d1**2 - d4**2 - d5**2 - 2*d4*d6 - d6**2 + d7**2*f13**2 - 2*d7*f13*f14 + f14**2 + d7**2*f23**2 - 2*d7*f23*f24 + f24**2 + 2*d1*d7*f33 + d7**2*f33**2 - 2*d1*f34 - 2*d7*f33*f34 + f34**2)*
(d1*(f13**2 + f23**2) + f13*f14*f33 - f13**2*f34 + f23*(f24*f33 - f23*f34)))]), poly([-2*d6, -((4*a3*d6*(d1*(f13**2 + f23**2) + f13*f14*f33 - f13**2*f34 + f23*(f24*f33 - f23*f34)))/(a2*den2)), -2*d6]), 
poly([-((4*(f14*f23 - f13*f24)*(d1 + d7*f33 - f34))/(f13*f14 - d7*(f13**2 + f23**2) + f23*f24)), 0, -((4*(f14*f23 - f13*f24)*(d1 + d7*f33 - f34))/(f13*f14 - d7*(f13**2 + f23**2) + f23*f24))]), 
poly([2*d6, -((4*a3*d6*(d1*(f13**2 + f23**2) + f13*f14*f33 - f13**2*f34 + f23*(f24*f33 - f23*f34)))/(a2*den2)), 2*d6]), 
poly([(1/(2*a2*den2))*(a2**2*(d1*(f13**2 + f23**2) - f13*f14*f33 + 2*d7*(f13**2 + f23**2)*f33 - f23*f24*f33 - f13**2*f34 - f23**2*f34) + 
(-a3**2 + d1**2 - d4**2 - 2*a3*d5 - d5**2 + 2*d4*d6 - d6**2 + d7**2*f13**2 - 2*d7*f13*f14 + f14**2 + d7**2*f23**2 - 2*d7*f23*f24 + f24**2 + 2*d1*d7*f33 + d7**2*f33**2 - 2*d1*f34 - 2*d7*f33*f34 + f34**2)*(d1*(f13**2 + f23**2) + f13*f14*f33 - f13**2*f34 + f23*(f24*f33 - f23*f34))), -2*a3, 
(1/(2*a2*den2))*(a2**2*(d1*(f13**2 + f23**2) - f13*f14*f33 + 2*d7*(f13**2 + f23**2)*f33 - f23*f24*f33 - f13**2*f34 - f23**2*f34) - a3**2*(d1*(f13**2 + f23**2) + f13*f14*f33 - f13**2*f34 + f23*(f24*f33 - f23*f34)) + 
2*a3*d5*(d1*(f13**2 + f23**2) + f13*f14*f33 - f13**2*f34 + f23*(f24*f33 - f23*f34)) + (d1**2 - d4**2 - d5**2 + 2*d4*d6 - d6**2 + d7**2*f13**2 - 2*d7*f13*f14 + f14**2 + d7**2*f23**2 - 2*d7*f23*f24 + f24**2 + 2*d1*d7*f33 + d7**2*f33**2 - 2*d1*f34 - 2*d7*f33*f34 + f34**2)*
(d1*(f13**2 + f23**2) + f13*f14*f33 - f13**2*f34 + f23*(f24*f33 - f23*f34)))]), poly([2*(a3 + d5), 0, -2*a3 + 2*d5]), 
poly([(1/(2*a2*den2))*(a2**2*(d1*(f13**2 + f23**2) - f13*f14*f33 + 2*d7*(f13**2 + f23**2)*f33 - f23*f24*f33 - f13**2*f34 - f23**2*f34) + 
(-a3**2 + d1**2 - d4**2 - 2*a3*d5 - d5**2 + 2*d4*d6 - d6**2 + d7**2*f13**2 - 2*d7*f13*f14 + f14**2 + d7**2*f23**2 - 2*d7*f23*f24 + f24**2 + 2*d1*d7*f33 + d7**2*f33**2 - 2*d1*f34 - 2*d7*f33*f34 + f34**2)*(d1*(f13**2 + f23**2) + f13*f14*f33 - f13**2*f34 + f23*(f24*f33 - f23*f34))), 2*a3, 
(1/(2*a2*den2))*(a2**2*(d1*(f13**2 + f23**2) - f13*f14*f33 + 2*d7*(f13**2 + f23**2)*f33 - f23*f24*f33 - f13**2*f34 - f23**2*f34) - a3**2*(d1*(f13**2 + f23**2) + f13*f14*f33 - f13**2*f34 + f23*(f24*f33 - f23*f34)) + 
2*a3*d5*(d1*(f13**2 + f23**2) + f13*f14*f33 - f13**2*f34 + f23*(f24*f33 - f23*f34)) + (d1**2 - d4**2 - d5**2 + 2*d4*d6 - d6**2 + d7**2*f13**2 - 2*d7*f13*f14 + f14**2 + d7**2*f23**2 - 2*d7*f23*f24 + f24**2 + 2*d1*d7*f33 + d7**2*f33**2 - 2*d1*f34 - 2*d7*f33*f34 + f34**2)*
(d1*(f13**2 + f23**2) + f13*f14*f33 - f13**2*f34 + f23*(f24*f33 - f23*f34)))]), poly([0]), poly([0]), poly([0])]
,[poly([a2**2 - a3**2 - d1**2 + d4**2 - d5**2 + 2*d4*d6 + d6**2 + 2*d5*d7*f13**2 - d7**2*f13**2 - 2*d5*f13*f14 + 2*d7*f13*f14 - f14**2 + 2*d5*d7*f23**2 - d7**2*f23**2 - 2*d5*f23*f24 + 2*d7*f23*f24 - f24**2 + 2*d5*d7*f33**2 - d7**2*f33**2 - 2*d5*f33*f34 + 2*d7*f33*f34 - f34**2 + 2*d1*(d5*f33 - d7*f33 + f34) - 
2*a3*(d5 + f13*f14 + f23*f24 - d1*f33 - d7*(f13**2 + f23**2 + f33**2) + f33*f34), -4*a2*(d1 - d5*f33 + d7*f33 - f34), -a2**2 + a3**2 + d1**2 - d4**2 + d5**2 - 2*d4*d6 - d6**2 - 2*d5*d7*f13**2 + d7**2*f13**2 + 2*d5*f13*f14 - 2*d7*f13*f14 + f14**2 - 2*d5*d7*f23**2 + d7**2*f23**2 + 2*d5*f23*f24 - 
2*d7*f23*f24 + f24**2 - 2*d5*d7*f33**2 + d7**2*f33**2 + 2*d5*f33*f34 - 2*d7*f33*f34 + f34**2 - 2*d1*(d5*f33 - d7*f33 + f34) - 2*a3*(d5 + f13*f14 + f23*f24 - d1*f33 - d7*(f13**2 + f23**2 + f33**2) + f33*f34)]), 
poly([-4*a2*(d1 + d7*f33 - f34), 4*(-a2**2 + a3**2 + d1**2 - d4**2 - d5**2 - 2*d4*d6 - d6**2 + d7**2*f13**2 - 2*d7*f13*f14 + f14**2 + d7**2*f23**2 - 2*d7*f23*f24 + f24**2 + 2*d1*d7*f33 + d7**2*f33**2 - 2*d1*f34 - 2*d7*f33*f34 + f34**2), 4*a2*(d1 + d7*f33 - f34)]), 
poly([-a2**2 + a3**2 + d1**2 - d4**2 + d5**2 - 2*d4*d6 - d6**2 + 2*d5*d7*f13**2 + d7**2*f13**2 - 2*d5*f13*f14 - 2*d7*f13*f14 + f14**2 + 2*d5*d7*f23**2 + d7**2*f23**2 - 2*d5*f23*f24 - 2*d7*f23*f24 + f24**2 + 2*d5*d7*f33**2 + d7**2*f33**2 + 2*d1*(d5*f33 + d7*f33 - f34) - 2*d5*f33*f34 - 2*d7*f33*f34 + 
f34**2 + 2*a3*(d5 - f13*f14 - f23*f24 + d1*f33 + d7*(f13**2 + f23**2 + f33**2) - f33*f34), 4*a2*(d1 + d5*f33 + d7*f33 - f34), a2**2 - a3**2 - d1**2 + d4**2 - d5**2 + 2*d4*d6 + d6**2 - 2*d5*d7*f13**2 - d7**2*f13**2 + 2*d5*f13*f14 + 2*d7*f13*f14 - f14**2 - 2*d5*d7*f23**2 - d7**2*f23**2 + 
2*d5*f23*f24 + 2*d7*f23*f24 - f24**2 - 2*d5*d7*f33**2 - d7**2*f33**2 - 2*d1*(d5*f33 + d7*f33 - f34) + 2*d5*f33*f34 + 2*d7*f33*f34 - f34**2 + 2*a3*(d5 - f13*f14 - f23*f24 + d1*f33 + d7*(f13**2 + f23**2 + f33**2) - f33*f34)]), 
poly([-4*a2*d6*f33, -8*d6*(d5 + f13*f14 + f23*f24 - d1*f33 - d7*(f13**2 + f23**2 + f33**2) + f33*f34), 4*a2*d6*f33]), poly([-8*d4*(a3 + d5), 0, 8*d4*(-a3 + d5)]), poly([-4*a2*d6*f33, 8*d6*(d5 - f13*f14 - f23*f24 + d1*f33 + d7*(f13**2 + f23**2 + f33**2) - f33*f34), 4*a2*d6*f33]), 
poly([a2**2 - a3**2 - d1**2 + d4**2 - d5**2 - 2*d4*d6 + d6**2 + 2*d5*d7*f13**2 - d7**2*f13**2 - 2*d5*f13*f14 + 2*d7*f13*f14 - f14**2 + 2*d5*d7*f23**2 - d7**2*f23**2 - 2*d5*f23*f24 + 2*d7*f23*f24 - f24**2 + 2*d5*d7*f33**2 - d7**2*f33**2 - 2*d5*f33*f34 + 2*d7*f33*f34 - f34**2 + 2*d1*(d5*f33 - d7*f33 + f34) - 
2*a3*(d5 + f13*f14 + f23*f24 - d1*f33 - d7*(f13**2 + f23**2 + f33**2) + f33*f34), -4*a2*(d1 - d5*f33 + d7*f33 - f34), -a2**2 + a3**2 + d1**2 - d4**2 + d5**2 + 2*d4*d6 - d6**2 - 2*d5*d7*f13**2 + d7**2*f13**2 + 2*d5*f13*f14 - 2*d7*f13*f14 + f14**2 - 2*d5*d7*f23**2 + d7**2*f23**2 + 2*d5*f23*f24 - 
2*d7*f23*f24 + f24**2 - 2*d5*d7*f33**2 + d7**2*f33**2 + 2*d5*f33*f34 - 2*d7*f33*f34 + f34**2 - 2*d1*(d5*f33 - d7*f33 + f34) - 2*a3*(d5 + f13*f14 + f23*f24 - d1*f33 - d7*(f13**2 + f23**2 + f33**2) + f33*f34)]), 
poly([4*a2*(d1 + d7*f33 - f34), 4*a2**2 - 4*(a3**2 + d1**2 - d4**2 - d5**2 + 2*d4*d6 - d6**2 + d7**2*f13**2 - 2*d7*f13*f14 + f14**2 + d7**2*f23**2 - 2*d7*f23*f24 + f24**2 + 2*d1*d7*f33 + d7**2*f33**2 - 2*d1*f34 - 2*d7*f33*f34 + f34**2), -4*a2*(d1 + d7*f33 - f34)]), 
poly([-a2**2 + a3**2 + d1**2 - d4**2 + d5**2 + 2*d4*d6 - d6**2 + 2*d5*d7*f13**2 + d7**2*f13**2 - 2*d5*f13*f14 - 2*d7*f13*f14 + f14**2 + 2*d5*d7*f23**2 + d7**2*f23**2 - 2*d5*f23*f24 - 2*d7*f23*f24 + f24**2 + 2*d5*d7*f33**2 + d7**2*f33**2 + 2*d1*(d5*f33 + d7*f33 - f34) - 2*d5*f33*f34 - 2*d7*f33*f34 + 
f34**2 + 2*a3*(d5 - f13*f14 - f23*f24 + d1*f33 + d7*(f13**2 + f23**2 + f33**2) - f33*f34), 4*a2*(d1 + d5*f33 + d7*f33 - f34), a2**2 - a3**2 - d1**2 + d4**2 - d5**2 - 2*d4*d6 + d6**2 - 2*d5*d7*f13**2 - d7**2*f13**2 + 2*d5*f13*f14 + 2*d7*f13*f14 - f14**2 - 2*d5*d7*f23**2 - d7**2*f23**2 + 
2*d5*f23*f24 + 2*d7*f23*f24 - f24**2 - 2*d5*d7*f33**2 - d7**2*f33**2 - 2*d1*(d5*f33 + d7*f33 - f34) + 2*d5*f33*f34 + 2*d7*f33*f34 - f34**2 + 2*a3*(d5 - f13*f14 - f23*f24 + d1*f33 + d7*(f13**2 + f23**2 + f33**2) - f33*f34)]), poly([0]), poly([0]), poly([0])]
,[poly([-2*a2*(-d1 + a3*f33 + d5*f33 - d7*f33 + f34), 2*(a2**2 + a3**2 - d1**2 + d4**2 - d5**2 + 2*d4*d6 + d6**2 + 2*d5*d7*f13**2 - d7**2*f13**2 - 2*d5*f13*f14 + 2*d7*f13*f14 - f14**2 + 2*d5*d7*f23**2 - d7**2*f23**2 - 2*d5*f23*f24 + 2*d7*f23*f24 - f24**2 + 2*d1*d5*f33 - 2*d1*d7*f33 + 2*d5*d7*f33**2 - 
d7**2*f33**2 + 2*d1*f34 - 2*d5*f33*f34 + 2*d7*f33*f34 - f34**2), -2*a2*(d1 + a3*f33 - d5*f33 + d7*f33 - f34)]), 
poly([2*(a2**2 + a3**2 - d1**2 + d4**2 + 2*a3*d5 + d5**2 + 2*d4*d6 + d6**2 - d7**2*f13**2 + 2*d7*f13*f14 - f14**2 - d7**2*f23**2 + 2*d7*f23*f24 - f24**2 - 2*d1*d7*f33 - d7**2*f33**2 + 2*d1*f34 + 2*d7*f33*f34 - f34**2), -8*a2*(d1 + d7*f33 - f34), 
-2*(a2**2 + a3**2 - d1**2 + d4**2 - 2*a3*d5 + d5**2 + 2*d4*d6 + d6**2 - d7**2*f13**2 + 2*d7*f13*f14 - f14**2 - d7**2*f23**2 + 2*d7*f23*f24 - f24**2 - 2*d1*d7*f33 - d7**2*f33**2 + 2*d1*f34 + 2*d7*f33*f34 - f34**2)]), 
poly([-2*a2*(d1 + a3*f33 + d5*f33 + d7*f33 - f34), -2*(a2**2 + a3**2 - d1**2 + d4**2 - d5**2 + 2*d4*d6 + d6**2 - 2*d5*d7*f13**2 - d7**2*f13**2 + 2*d5*f13*f14 + 2*d7*f13*f14 - f14**2 - 2*d5*d7*f23**2 - d7**2*f23**2 + 2*d5*f23*f24 + 2*d7*f23*f24 - f24**2 - 2*d1*d5*f33 - 2*d1*d7*f33 - 2*d5*d7*f33**2 - 
d7**2*f33**2 + 2*d1*f34 + 2*d5*f33*f34 + 2*d7*f33*f34 - f34**2), 2*a2*(d1 - a3*f33 + d5*f33 + d7*f33 - f34)]), poly([4*d6*(a3 + d5 - d7*f13**2 + f13*f14 - d7*f23**2 + f23*f24 - d1*f33 - d7*f33**2 + f33*f34), -8*a2*d6*f33, 
4*d6*(a3 - d5 + d7*f13**2 - f13*f14 + d7*f23**2 - f23*f24 + d1*f33 + d7*f33**2 - f33*f34)]), poly([0, -16*d4*d5]), poly([-4*d6*(a3 + d5 + d7*f13**2 - f13*f14 + d7*f23**2 - f23*f24 + d1*f33 + d7*f33**2 - f33*f34), -8*a2*d6*f33, 
4*d6*(-a3 + d5 + d7*f13**2 - f13*f14 + d7*f23**2 - f23*f24 + d1*f33 + d7*f33**2 - f33*f34)]), poly([-2*a2*(-d1 + a3*f33 + d5*f33 - d7*f33 + f34), 2*(a2**2 + a3**2 - d1**2 + d4**2 - d5**2 - 2*d4*d6 + d6**2 + 2*d5*d7*f13**2 - d7**2*f13**2 - 2*d5*f13*f14 + 2*d7*f13*f14 - f14**2 + 2*d5*d7*f23**2 - 
d7**2*f23**2 - 2*d5*f23*f24 + 2*d7*f23*f24 - f24**2 + 2*d1*d5*f33 - 2*d1*d7*f33 + 2*d5*d7*f33**2 - d7**2*f33**2 + 2*d1*f34 - 2*d5*f33*f34 + 2*d7*f33*f34 - f34**2), -2*a2*(d1 + a3*f33 - d5*f33 + d7*f33 - f34)]), 
poly([-2*(a2**2 + a3**2 - d1**2 + d4**2 + 2*a3*d5 + d5**2 - 2*d4*d6 + d6**2 - d7**2*f13**2 + 2*d7*f13*f14 - f14**2 - d7**2*f23**2 + 2*d7*f23*f24 - f24**2 - 2*d1*d7*f33 - d7**2*f33**2 + 2*d1*f34 + 2*d7*f33*f34 - f34**2), 8*a2*(d1 + d7*f33 - f34), 
2*(a2**2 + a3**2 - d1**2 + d4**2 - 2*a3*d5 + d5**2 - 2*d4*d6 + d6**2 - d7**2*f13**2 + 2*d7*f13*f14 - f14**2 - d7**2*f23**2 + 2*d7*f23*f24 - f24**2 - 2*d1*d7*f33 - d7**2*f33**2 + 2*d1*f34 + 2*d7*f33*f34 - f34**2)]), 
poly([-2*a2*(d1 + a3*f33 + d5*f33 + d7*f33 - f34), -2*(a2**2 + a3**2 - d1**2 + d4**2 - d5**2 - 2*d4*d6 + d6**2 - 2*d5*d7*f13**2 - d7**2*f13**2 + 2*d5*f13*f14 + 2*d7*f13*f14 - f14**2 - 2*d5*d7*f23**2 - d7**2*f23**2 + 2*d5*f23*f24 + 2*d7*f23*f24 - f24**2 - 2*d1*d5*f33 - 2*d1*d7*f33 - 2*d5*d7*f33**2 - 
d7**2*f33**2 + 2*d1*f34 + 2*d5*f33*f34 + 2*d7*f33*f34 - f34**2), 2*a2*(d1 - a3*f33 + d5*f33 + d7*f33 - f34)]), poly([0]), poly([0]), poly([0])]
,[poly([(1/(a2*den2))*(2*a2*(a3 + d5)*(d4 + d6)*den2 - a2**2*(f14*f23 - f13*f24)*(f13*f14 + f23*f24 + d1*f33 - d7*(f13**2 + f23**2 - f33**2) - f33*f34) + 
(f14*f23 - f13*f24)*(f13*f14 + f23*f24 - d1*f33 - d7*(f13**2 + f23**2 + f33**2) + f33*f34)*(-a3**2 + d1**2 - d4**2 - 2*a3*d5 - d5**2 - 2*d4*d6 - d6**2 + d7**2*f13**2 - 2*d7*f13*f14 + f14**2 + d7**2*f23**2 - 2*d7*f23*f24 + f24**2 + 2*d1*d7*f33 + d7**2*f33**2 - 2*d1*f34 - 2*d7*f33*f34 + f34**2)), 0, 
-2*a3*(d4 + d6) + 2*d5*(d4 + d6) + (a2*(f14*f23 - f13*f24)*(f13*f14 + f23*f24 + d1*f33 - d7*(f13**2 + f23**2 - f33**2) - f33*f34))/(f13*f14 - d7*(f13**2 + f23**2) + f23*f24) - (a3**2*(f14*f23 - f13*f24)*(f13*f14 + f23*f24 - d1*f33 - d7*(f13**2 + f23**2 + f33**2) + f33*f34))/
(a2*den2) + (2*a3*d5*(f14*f23 - f13*f24)*(f13*f14 + f23*f24 - d1*f33 - d7*(f13**2 + f23**2 + f33**2) + f33*f34))/(a2*den2) + 
((f14*f23 - f13*f24)*(f13*f14 + f23*f24 - d1*f33 - d7*(f13**2 + f23**2 + f33**2) + f33*f34)*(d1**2 - d4**2 - d5**2 - 2*d4*d6 - d6**2 + d7**2*f13**2 - 2*d7*f13*f14 + f14**2 + d7**2*f23**2 - 2*d7*f23*f24 + f24**2 + 2*d1*d7*f33 + d7**2*f33**2 - 2*d1*f34 - 2*d7*f33*f34 + f34**2))/
(a2*den2)]), poly([0, -8*a3*(d4 + d6)]), poly([(1/(a2*den2))*(-2*a2*(a3 + d5)*(d4 + d6)*den2 - 
a2**2*(f14*f23 - f13*f24)*(f13*f14 + f23*f24 + d1*f33 - d7*(f13**2 + f23**2 - f33**2) - f33*f34) + (f14*f23 - f13*f24)*(f13*f14 + f23*f24 - d1*f33 - d7*(f13**2 + f23**2 + f33**2) + f33*f34)*(-a3**2 + d1**2 - d4**2 - 2*a3*d5 - d5**2 - 2*d4*d6 - d6**2 + d7**2*f13**2 - 2*d7*f13*f14 + f14**2 + 
d7**2*f23**2 - 2*d7*f23*f24 + f24**2 + 2*d1*d7*f33 + d7**2*f33**2 - 2*d1*f34 - 2*d7*f33*f34 + f34**2)), 0, 2*a3*(d4 + d6) - 2*d5*(d4 + d6) + (a2*(f14*f23 - f13*f24)*(f13*f14 + f23*f24 + d1*f33 - d7*(f13**2 + f23**2 - f33**2) - f33*f34))/(f13*f14 - d7*(f13**2 + f23**2) + f23*f24) - 
(a3**2*(f14*f23 - f13*f24)*(f13*f14 + f23*f24 - d1*f33 - d7*(f13**2 + f23**2 + f33**2) + f33*f34))/(a2*den2) + (2*a3*d5*(f14*f23 - f13*f24)*(f13*f14 + f23*f24 - d1*f33 - d7*(f13**2 + f23**2 + f33**2) + f33*f34))/
(a2*den2) + ((f14*f23 - f13*f24)*(f13*f14 + f23*f24 - d1*f33 - d7*(f13**2 + f23**2 + f33**2) + f33*f34)*(d1**2 - d4**2 - d5**2 - 2*d4*d6 - d6**2 + d7**2*f13**2 - 2*d7*f13*f14 + f14**2 + d7**2*f23**2 - 2*d7*f23*f24 + f24**2 + 2*d1*d7*f33 + d7**2*f33**2 - 
2*d1*f34 - 2*d7*f33*f34 + f34**2))/(a2*den2)]), poly([0, -((8*a3*d6*(f14*f23 - f13*f24)*(f13*f14 + f23*f24 - d1*f33 - d7*(f13**2 + f23**2 + f33**2) + f33*f34))/(a2*den2))]), 
poly([-((1/den2)*(4*((-d1**2)*d7*f13**2 - d4**2*d7*f13**2 + d5**2*d7*f13**2 + d6**2*d7*f13**2 + d7**3*f13**4 + d1**2*f13*f14 + d4**2*f13*f14 - d5**2*f13*f14 - d6**2*f13*f14 - 3*d7**2*f13**3*f14 + 3*d7*f13**2*f14**2 - f13*f14**3 - d1**2*d7*f23**2 - d4**2*d7*f23**2 + 
d5**2*d7*f23**2 + d6**2*d7*f23**2 + 2*d7**3*f13**2*f23**2 - 3*d7**2*f13*f14*f23**2 + d7*f14**2*f23**2 + d7**3*f23**4 + d1**2*f23*f24 + d4**2*f23*f24 - d5**2*f23*f24 - d6**2*f23*f24 - 3*d7**2*f13**2*f23*f24 + 4*d7*f13*f14*f23*f24 - f14**2*f23*f24 - 3*d7**2*f23**3*f24 + d7*f13**2*f24**2 - f13*f14*f24**2 + 
3*d7*f23**2*f24**2 - f23*f24**3 + a3**2*den2 + 2*a3*d5*den2 + a2**2*(f13*f14 - d7*(f13**2 + f23**2) + f23*f24) - 2*d1*d7*f13*f14*f33 + 2*d1*f14**2*f33 - 2*d1*d7*f23*f24*f33 + 2*d1*f24**2*f33 + 
d7**3*f13**2*f33**2 - 3*d7**2*f13*f14*f33**2 + 2*d7*f14**2*f33**2 + d7**3*f23**2*f33**2 - 3*d7**2*f23*f24*f33**2 + 2*d7*f24**2*f33**2 + 2*d1*d7*f13**2*f34 - 2*d1*f13*f14*f34 + 2*d1*d7*f23**2*f34 - 2*d1*f23*f24*f34 + 2*d7*f13*f14*f33*f34 - 2*f14**2*f33*f34 + 2*d7*f23*f24*f33*f34 - 
2*f24**2*f33*f34 - d7*f13**2*f34**2 + f13*f14*f34**2 - d7*f23**2*f34**2 + f23*f24*f34**2))), 0, 
4*(a2**2 - a3**2 + 2*a3*d5 + (1/den2)*((-d5**2)*d7*f13**2 - d6**2*d7*f13**2 - d7**3*f13**4 + d5**2*f13*f14 + d6**2*f13*f14 + 3*d7**2*f13**3*f14 - 3*d7*f13**2*f14**2 + f13*f14**3 - d5**2*d7*f23**2 - d6**2*d7*f23**2 - 2*d7**3*f13**2*f23**2 + 3*d7**2*f13*f14*f23**2 - 
d7*f14**2*f23**2 - d7**3*f23**4 + d5**2*f23*f24 + d6**2*f23*f24 + 3*d7**2*f13**2*f23*f24 - 4*d7*f13*f14*f23*f24 + f14**2*f23*f24 + 3*d7**2*f23**3*f24 - d7*f13**2*f24**2 + f13*f14*f24**2 - 3*d7*f23**2*f24**2 + f23*f24**3 + d1**2*den2 + 
d4**2*den2 - d7**3*f13**2*f33**2 + 3*d7**2*f13*f14*f33**2 - 2*d7*f14**2*f33**2 - d7**3*f23**2*f33**2 + 3*d7**2*f23*f24*f33**2 - 2*d7*f24**2*f33**2 - 2*d7*f13*f14*f33*f34 + 2*f14**2*f33*f34 - 2*d7*f23*f24*f33*f34 + 2*f24**2*f33*f34 + d7*f13**2*f34**2 - 
f13*f14*f34**2 + d7*f23**2*f34**2 - f23*f24*f34**2 - 2*d1*(f14**2*f33 + f24**2*f33 - f13*f14*f34 - f23*f24*f34 + d7*((-f13)*f14*f33 - f23*f24*f33 + f13**2*f34 + f23**2*f34))))]), 
poly([0, -((8*a3*d6*(f14*f23 - f13*f24)*(f13*f14 + f23*f24 - d1*f33 - d7*(f13**2 + f23**2 + f33**2) + f33*f34))/(a2*den2))]), 
poly([(1/(a2*den2))*(2*a2*(a3 + d5)*(d4 - d6)*den2 - a2**2*(f14*f23 - f13*f24)*(f13*f14 + f23*f24 + d1*f33 - d7*(f13**2 + f23**2 - f33**2) - f33*f34) + 
(f14*f23 - f13*f24)*(f13*f14 + f23*f24 - d1*f33 - d7*(f13**2 + f23**2 + f33**2) + f33*f34)*(-a3**2 + d1**2 - d4**2 - 2*a3*d5 - d5**2 + 2*d4*d6 - d6**2 + d7**2*f13**2 - 2*d7*f13*f14 + f14**2 + d7**2*f23**2 - 2*d7*f23*f24 + f24**2 + 2*d1*d7*f33 + d7**2*f33**2 - 2*d1*f34 - 2*d7*f33*f34 + f34**2)), 0, 
-2*a3*(d4 - d6) + 2*d5*(d4 - d6) + (a2*(f14*f23 - f13*f24)*(f13*f14 + f23*f24 + d1*f33 - d7*(f13**2 + f23**2 - f33**2) - f33*f34))/(f13*f14 - d7*(f13**2 + f23**2) + f23*f24) - (a3**2*(f14*f23 - f13*f24)*(f13*f14 + f23*f24 - d1*f33 - d7*(f13**2 + f23**2 + f33**2) + f33*f34))/
(a2*den2) + (2*a3*d5*(f14*f23 - f13*f24)*(f13*f14 + f23*f24 - d1*f33 - d7*(f13**2 + f23**2 + f33**2) + f33*f34))/(a2*den2) + 
((f14*f23 - f13*f24)*(f13*f14 + f23*f24 - d1*f33 - d7*(f13**2 + f23**2 + f33**2) + f33*f34)*(d1**2 - d4**2 - d5**2 + 2*d4*d6 - d6**2 + d7**2*f13**2 - 2*d7*f13*f14 + f14**2 + d7**2*f23**2 - 2*d7*f23*f24 + f24**2 + 2*d1*d7*f33 + d7**2*f33**2 - 2*d1*f34 - 2*d7*f33*f34 + f34**2))/
(a2*den2)]), poly([0, 8*a3*(d4 - d6)]), poly([(1/(a2*den2))*(-2*a2*(a3 + d5)*(d4 - d6)*den2 - 
a2**2*(f14*f23 - f13*f24)*(f13*f14 + f23*f24 + d1*f33 - d7*(f13**2 + f23**2 - f33**2) - f33*f34) + (f14*f23 - f13*f24)*(f13*f14 + f23*f24 - d1*f33 - d7*(f13**2 + f23**2 + f33**2) + f33*f34)*(-a3**2 + d1**2 - d4**2 - 2*a3*d5 - d5**2 + 2*d4*d6 - d6**2 + d7**2*f13**2 - 2*d7*f13*f14 + f14**2 + 
d7**2*f23**2 - 2*d7*f23*f24 + f24**2 + 2*d1*d7*f33 + d7**2*f33**2 - 2*d1*f34 - 2*d7*f33*f34 + f34**2)), 0, 2*a3*(d4 - d6) - 2*d5*(d4 - d6) + (a2*(f14*f23 - f13*f24)*(f13*f14 + f23*f24 + d1*f33 - d7*(f13**2 + f23**2 - f33**2) - f33*f34))/(f13*f14 - d7*(f13**2 + f23**2) + f23*f24) - 
(a3**2*(f14*f23 - f13*f24)*(f13*f14 + f23*f24 - d1*f33 - d7*(f13**2 + f23**2 + f33**2) + f33*f34))/(a2*den2) + (2*a3*d5*(f14*f23 - f13*f24)*(f13*f14 + f23*f24 - d1*f33 - d7*(f13**2 + f23**2 + f33**2) + f33*f34))/
(a2*den2) + ((f14*f23 - f13*f24)*(f13*f14 + f23*f24 - d1*f33 - d7*(f13**2 + f23**2 + f33**2) + f33*f34)*(d1**2 - d4**2 - d5**2 + 2*d4*d6 - d6**2 + d7**2*f13**2 - 2*d7*f13*f14 + f14**2 + d7**2*f23**2 - 2*d7*f23*f24 + f24**2 + 2*d1*d7*f33 + d7**2*f33**2 - 
2*d1*f34 - 2*d7*f33*f34 + f34**2))/(a2*den2)]), poly([0]), poly([0]), poly([0])]
]